<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="2252px" preserveAspectRatio="none" style="width:5058px;height:2252px;background:#FFFFFF;" version="1.1" viewBox="0 0 5058 2252" width="5058px" zoomAndPan="magnify"><defs/><g><!--class Window--><g id="elem_Window"><rect codeLine="1" fill="#F1F1F1" height="347.3594" id="Window" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="790" x="7" y="306.5"/><ellipse cx="373.25" cy="322.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M376.0156,318.375 Q376.1719,318.1563 376.3594,318.0469 Q376.5469,317.9375 376.7656,317.9375 Q377.1406,317.9375 377.375,318.2031 Q377.6094,318.4531 377.6094,319.0625 L377.6094,320.5156 Q377.6094,321.125 377.375,321.3906 Q377.1406,321.6563 376.7656,321.6563 Q376.4219,321.6563 376.2188,321.4531 Q376.0156,321.2656 375.9063,320.75 Q375.8594,320.3906 375.6719,320.2031 Q375.3438,319.8281 374.7344,319.6094 Q374.125,319.3906 373.5,319.3906 Q372.7344,319.3906 372.0938,319.7188 Q371.4688,320.0469 370.9688,320.7969 Q370.4844,321.5469 370.4844,322.5781 L370.4844,323.6719 Q370.4844,324.9063 371.375,325.7344 Q372.2656,326.5469 373.8594,326.5469 Q374.7969,326.5469 375.4531,326.2969 Q375.8438,326.1406 376.2656,325.7031 Q376.5313,325.4375 376.6719,325.3594 Q376.8281,325.2813 377.0313,325.2813 Q377.3594,325.2813 377.6094,325.5469 Q377.875,325.7969 377.875,326.1406 Q377.875,326.4844 377.5313,326.8906 Q377.0313,327.4688 376.2344,327.7969 Q375.1563,328.25 373.8594,328.25 Q372.3438,328.25 371.1406,327.625 Q370.1563,327.125 369.4688,326.0625 Q368.7813,324.9844 368.7813,323.7031 L368.7813,322.5469 Q368.7813,321.2188 369.3906,320.0781 Q370.0156,318.9219 371.1094,318.3125 Q372.2031,317.6875 373.4375,317.6875 Q374.1719,317.6875 374.8125,317.8594 Q375.4688,318.0156 376.0156,318.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="393.75" y="328.2285">Window</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="796" y1="338.5" y2="338.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="349.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="27" y="357.0332">int m_Width, m_Height;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="367.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="27" y="374.6426">std::string m_Name;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="385.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="27" y="392.252">GLFWwindow *m_WindowHandle;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="402.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="27" y="409.8613">bool m_FrameBufferResizeFlag = false;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="796" y1="416.9375" y2="416.9375"/><ellipse cx="18" cy="431.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="27" y="435.4707">Window(int w, int h, const std::string &amp;name);</text><ellipse cx="18" cy="448.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="27" y="453.0801">~Window();</text><ellipse cx="18" cy="466.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="27" y="470.6895">Window(const Window &amp;) = delete;</text><ellipse cx="18" cy="484.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="27" y="488.2988">Window &amp;operator=(const Window &amp;) = delete;</text><ellipse cx="18" cy="501.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="476" x="27" y="505.9082">inline GLFWwindow *GetWindowHandle() const { return m_WindowHandle; }</text><ellipse cx="18" cy="519.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="539" x="27" y="523.5176">inline bool ShouldClose() const { return glfwWindowShouldClose(m_WindowHandle); }</text><ellipse cx="18" cy="536.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="712" x="27" y="541.127">inline VkExtent2D GetExtent() const { return {static_cast&lt;uint32_t&gt;(m_Width), static_cast&lt;uint32_t&gt;(m_Height)}; }</text><ellipse cx="18" cy="554.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="501" x="27" y="558.7363">inline bool WasFrameBufferResizd() const { return m_FrameBufferResizeFlag; }</text><ellipse cx="18" cy="572.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="503" x="27" y="576.3457">inline void ResetFrameBufferResizeFlag() { m_FrameBufferResizeFlag = false; }</text><ellipse cx="18" cy="589.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="764" x="27" y="593.9551">VkResult CreateWindowSurface(VkInstance instance, const VkAllocationCallbacks *pAllocator, VkSurfaceKHR *pSurface);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="611.5645">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="621.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="27" y="629.1738">void InitWindow();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="639.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="484" x="27" y="646.7832">void FrameBufferResizeCallback(GLFWwindow *window, int width, int height);</text></g><!--class SwapChainSupportDetails--><g id="elem_SwapChainSupportDetails"><rect codeLine="1" fill="#F1F1F1" height="100.8281" id="SwapChainSupportDetails" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="320" x="832" y="429.5"/><ellipse cx="905.75" cy="445.5" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M903.8594,450.0625 Q903.6406,450.3281 903.5,450.4063 Q903.3594,450.4844 903.1719,450.4844 Q902.7813,450.4844 902.5313,450.2188 Q902.2969,449.9531 902.2969,449.3594 L902.2969,448.2031 Q902.2969,447.5938 902.5313,447.3438 Q902.7813,447.0781 903.1719,447.0781 Q903.4688,447.0781 903.6719,447.2344 Q903.875,447.3906 903.9844,447.7656 Q904.0938,448.125 904.2031,448.2656 Q904.4531,448.5156 905.0625,448.7813 Q905.6719,449.0469 906.4063,449.0469 Q907.5469,449.0469 908.2656,448.5156 Q908.7344,448.1875 908.7344,447.7188 Q908.7344,447.4063 908.5156,447.125 Q908.2969,446.8438 907.7813,446.6719 Q907.4531,446.5469 906.2969,446.3281 Q904.9063,446.0625 904.1875,445.7031 Q903.4688,445.3438 903.0469,444.6875 Q902.6406,444.0156 902.6406,443.2344 Q902.6406,442.0156 903.6563,441.1094 Q904.6875,440.1875 906.3281,440.1875 Q906.9844,440.1875 907.5313,440.3281 Q908.0938,440.4688 908.5625,440.7656 Q908.8906,440.4531 909.2188,440.4531 Q909.5938,440.4531 909.8281,440.7188 Q910.0625,440.9688 910.0625,441.5781 L910.0625,442.8594 Q910.0625,443.4688 909.8281,443.7344 Q909.5938,443.9844 909.2188,443.9844 Q908.9063,443.9844 908.6719,443.7969 Q908.4844,443.6563 908.3906,443.2344 Q908.3125,442.8125 908.1719,442.625 Q907.9219,442.3125 907.4375,442.1094 Q906.9688,441.8906 906.3281,441.8906 Q905.4063,441.8906 904.875,442.3125 Q904.3438,442.7344 904.3438,443.2031 Q904.3438,443.5156 904.5625,443.8125 Q904.7813,444.1094 905.2031,444.2813 Q905.4844,444.3906 906.7813,444.6563 Q908.0938,444.9063 908.7969,445.2188 Q909.5,445.5156 909.9688,446.1719 Q910.4375,446.8281 910.4375,447.7344 Q910.4375,449 909.5469,449.75 Q908.3594,450.75 906.5313,450.75 Q905.8281,450.75 905.1563,450.5781 Q904.5,450.4063 903.8594,450.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="926.25" y="451.2285">SwapChainSupportDetails</text><line style="stroke:#181818;stroke-width:0.5;" x1="833" x2="1151" y1="461.5" y2="461.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="838" y="480.0332">VkSurfaceCapabilitiesKHR capabilities;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="838" y="497.6426">std::vector&lt;VkSurfaceFormatKHR&gt; formats;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="838" y="515.252">std::vector&lt;VkPresentModeKHR&gt; presentModes;</text><line style="stroke:#181818;stroke-width:0.5;" x1="833" x2="1151" y1="522.3281" y2="522.3281"/></g><!--class QueueFamilyIndices--><g id="elem_QueueFamilyIndices"><rect codeLine="8" fill="#F1F1F1" height="136.0469" id="QueueFamilyIndices" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="558" x="1187" y="412"/><ellipse cx="1397.75" cy="428" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1395.8594,432.5625 Q1395.6406,432.8281 1395.5,432.9063 Q1395.3594,432.9844 1395.1719,432.9844 Q1394.7813,432.9844 1394.5313,432.7188 Q1394.2969,432.4531 1394.2969,431.8594 L1394.2969,430.7031 Q1394.2969,430.0938 1394.5313,429.8438 Q1394.7813,429.5781 1395.1719,429.5781 Q1395.4688,429.5781 1395.6719,429.7344 Q1395.875,429.8906 1395.9844,430.2656 Q1396.0938,430.625 1396.2031,430.7656 Q1396.4531,431.0156 1397.0625,431.2813 Q1397.6719,431.5469 1398.4063,431.5469 Q1399.5469,431.5469 1400.2656,431.0156 Q1400.7344,430.6875 1400.7344,430.2188 Q1400.7344,429.9063 1400.5156,429.625 Q1400.2969,429.3438 1399.7813,429.1719 Q1399.4531,429.0469 1398.2969,428.8281 Q1396.9063,428.5625 1396.1875,428.2031 Q1395.4688,427.8438 1395.0469,427.1875 Q1394.6406,426.5156 1394.6406,425.7344 Q1394.6406,424.5156 1395.6563,423.6094 Q1396.6875,422.6875 1398.3281,422.6875 Q1398.9844,422.6875 1399.5313,422.8281 Q1400.0938,422.9688 1400.5625,423.2656 Q1400.8906,422.9531 1401.2188,422.9531 Q1401.5938,422.9531 1401.8281,423.2188 Q1402.0625,423.4688 1402.0625,424.0781 L1402.0625,425.3594 Q1402.0625,425.9688 1401.8281,426.2344 Q1401.5938,426.4844 1401.2188,426.4844 Q1400.9063,426.4844 1400.6719,426.2969 Q1400.4844,426.1563 1400.3906,425.7344 Q1400.3125,425.3125 1400.1719,425.125 Q1399.9219,424.8125 1399.4375,424.6094 Q1398.9688,424.3906 1398.3281,424.3906 Q1397.4063,424.3906 1396.875,424.8125 Q1396.3438,425.2344 1396.3438,425.7031 Q1396.3438,426.0156 1396.5625,426.3125 Q1396.7813,426.6094 1397.2031,426.7813 Q1397.4844,426.8906 1398.7813,427.1563 Q1400.0938,427.4063 1400.7969,427.7188 Q1401.5,428.0156 1401.9688,428.6719 Q1402.4375,429.3281 1402.4375,430.2344 Q1402.4375,431.5 1401.5469,432.25 Q1400.3594,433.25 1398.5313,433.25 Q1397.8281,433.25 1397.1563,433.0781 Q1396.5,432.9063 1395.8594,432.5625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="1418.25" y="433.7285">QueueFamilyIndices</text><line style="stroke:#181818;stroke-width:0.5;" x1="1188" x2="1744" y1="444" y2="444"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="1193" y="462.5332">uint32_t graphicsFamily;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="1193" y="480.1426">uint32_t presentFamily;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="1193" y="497.752">bool graphicsFamilyHasValue = false;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="1193" y="515.3613">bool presentFamilyHasValue = false;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1188" x2="1744" y1="522.4375" y2="522.4375"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="546" x="1193" y="540.9707">inline bool IsComplete() { return graphicsFamilyHasValue &amp;&amp; presentFamilyHasValue; }</text></g><!--class Device--><g id="elem_Device"><rect codeLine="17" fill="#F1F1F1" height="893.25" id="Device" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1727" x="1780.5" y="33.5"/><ellipse cx="2618.25" cy="49.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2621.0156,45.375 Q2621.1719,45.1563 2621.3594,45.0469 Q2621.5469,44.9375 2621.7656,44.9375 Q2622.1406,44.9375 2622.375,45.2031 Q2622.6094,45.4531 2622.6094,46.0625 L2622.6094,47.5156 Q2622.6094,48.125 2622.375,48.3906 Q2622.1406,48.6563 2621.7656,48.6563 Q2621.4219,48.6563 2621.2188,48.4531 Q2621.0156,48.2656 2620.9063,47.75 Q2620.8594,47.3906 2620.6719,47.2031 Q2620.3438,46.8281 2619.7344,46.6094 Q2619.125,46.3906 2618.5,46.3906 Q2617.7344,46.3906 2617.0938,46.7188 Q2616.4688,47.0469 2615.9688,47.7969 Q2615.4844,48.5469 2615.4844,49.5781 L2615.4844,50.6719 Q2615.4844,51.9063 2616.375,52.7344 Q2617.2656,53.5469 2618.8594,53.5469 Q2619.7969,53.5469 2620.4531,53.2969 Q2620.8438,53.1406 2621.2656,52.7031 Q2621.5313,52.4375 2621.6719,52.3594 Q2621.8281,52.2813 2622.0313,52.2813 Q2622.3594,52.2813 2622.6094,52.5469 Q2622.875,52.7969 2622.875,53.1406 Q2622.875,53.4844 2622.5313,53.8906 Q2622.0313,54.4688 2621.2344,54.7969 Q2620.1563,55.25 2618.8594,55.25 Q2617.3438,55.25 2616.1406,54.625 Q2615.1563,54.125 2614.4688,53.0625 Q2613.7813,51.9844 2613.7813,50.7031 L2613.7813,49.5469 Q2613.7813,48.2188 2614.3906,47.0781 Q2615.0156,45.9219 2616.1094,45.3125 Q2617.2031,44.6875 2618.4375,44.6875 Q2619.1719,44.6875 2619.8125,44.8594 Q2620.4688,45.0156 2621.0156,45.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="2638.75" y="55.2285">Device</text><line style="stroke:#181818;stroke-width:0.5;" x1="1781.5" x2="3506.5" y1="65.5" y2="65.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="76.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="1800.5" y="84.0332">Window &amp;r_Window;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="94.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="1800.5" y="101.6426">VkInstance m_Instance;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="112.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="1800.5" y="119.252">VkDebugUtilsMessengerEXT m_DebugMessenger;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="129.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="1800.5" y="136.8613">VkSurfaceKHR m_Surface;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="147.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="1800.5" y="154.4707">VkPhysicalDevice m_PhysicalDevice = VK_NULL_HANDLE;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="164.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="1800.5" y="172.0801">VkDevice m_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="182.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="1800.5" y="189.6895">VkQueue m_GraphicsQueue;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="200.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="1800.5" y="207.2988">VkQueue m_PresentQueue;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="217.6797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="1800.5" y="224.9082">VkCommandPool m_CommandPool;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="1800.5" y="242.5176">&#160;</text><ellipse cx="1791.5" cy="255.8984" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="230" x="1800.5" y="260.127">const bool s_EnableValidationLayer;</text><ellipse cx="1791.5" cy="273.5078" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="1800.5" y="277.7363">const std::vector&lt;const char *&gt; s_ValidationLayers;</text><ellipse cx="1791.5" cy="291.1172" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="329" x="1800.5" y="295.3457">const std::vector&lt;const char *&gt; s_DeviceExtensions;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1781.5" x2="3506.5" y1="302.4219" y2="302.4219"/><ellipse cx="1791.5" cy="316.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="1800.5" y="320.9551">Device(Window &amp;window);</text><ellipse cx="1791.5" cy="334.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="1800.5" y="338.5645">~Device();</text><ellipse cx="1791.5" cy="351.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="1800.5" y="356.1738">Device(const Window &amp;) = delete;</text><ellipse cx="1791.5" cy="369.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="281" x="1800.5" y="373.7832">Device &amp;operator=(const Device &amp;) = delete;</text><ellipse cx="1791.5" cy="387.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="1800.5" y="391.3926">inline VkInstance GetInstance() const { return m_Instance; }</text><ellipse cx="1791.5" cy="404.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="390" x="1800.5" y="409.002">inline VkSurfaceKHR GetSurface() const { return m_Surface; }</text><ellipse cx="1791.5" cy="422.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="344" x="1800.5" y="426.6113">inline VkDevice GetDevice() const { return m_Device; }</text><ellipse cx="1791.5" cy="439.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="458" x="1800.5" y="444.2207">inline VkQueue GetGraphicsQueue() const { return m_GraphicsQueue; }</text><ellipse cx="1791.5" cy="457.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="442" x="1800.5" y="461.8301">inline VkQueue GetPresentQueue() const { return m_PresentQueue; }</text><ellipse cx="1791.5" cy="475.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="491" x="1800.5" y="479.4395">inline VkCommandPool GetCommandPool() const { return m_CommandPool; }</text><ellipse cx="1791.5" cy="492.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="716" x="1800.5" y="497.0488">inline QueueFamilyIndices GetQueueFamilyIndices() const { return FindQueueFamilyIndices(m_PhysicalDevice); }</text><ellipse cx="1791.5" cy="510.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="835" x="1800.5" y="514.6582">inline SwapChainSupportDetails GetSwapChainSupportDetails() const { return QuerySwapChainSupportDetails(m_PhysicalDevice); }</text><ellipse cx="1791.5" cy="528.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1122" x="1800.5" y="532.2676">void CreateBuffer(        VkDeviceSize size,        VkBufferUsageFlags usage,        VkMemoryPropertyFlags properties,        VkBuffer &amp;buffer,        VkDeviceMemory &amp;bufferMemory);</text><ellipse cx="1791.5" cy="545.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557" x="1800.5" y="549.877">uint32_t FindMemoryTypeIndex(uint32_t typeFliter, VkMemoryPropertyFlags properties);</text><ellipse cx="1791.5" cy="563.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="1800.5" y="567.4863">VkCommandBuffer BeginSingleTimeCommands();</text><ellipse cx="1791.5" cy="580.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="431" x="1800.5" y="585.0957">void EndSingleTimeCommands(VkCommandBuffer commandBuffer);</text><ellipse cx="1791.5" cy="598.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="474" x="1800.5" y="602.7051">void CopyBuffer(VkBuffer srcBuffer, VkBuffer dstBuffer, VkDeviceSize size);</text><ellipse cx="1791.5" cy="616.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="698" x="1800.5" y="620.3145">void CopyBufferToImage(VkBuffer buffer, VkImage image, uint32_t width, uint32_t height, uint32_t layerCount);</text><ellipse cx="1791.5" cy="633.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1086" x="1800.5" y="637.9238">void CreateImageWithInfo(        const VkImageCreateInfo &amp;imageInfo,        VkMemoryPropertyFlags properties,        VkImage &amp;image,        VkDeviceMemory &amp;imageMemory);</text><ellipse cx="1791.5" cy="651.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="820" x="1800.5" y="655.5332">VkFormat FindSupportedFormat(const std::vector&lt;VkFormat&gt; &amp;candidates, VkImageTiling tiling, VkFormatFeatureFlags features);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="1800.5" y="673.1426">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="683.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="1800.5" y="690.752">void CreateInstance();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="701.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="1800.5" y="708.3613">bool CheckValidationLayerSupport();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="718.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="324" x="1800.5" y="725.9707">std::vector&lt;const char *&gt; GetRequiredExtensions();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="736.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="626" x="1800.5" y="743.5801">void PopulateDebugUtilsMessengerCreateInfo(VkDebugUtilsMessengerCreateInfoEXT &amp;debugInfo);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="753.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="1800.5" y="761.1895">void SetUpDebugMessenger();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="771.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="1800.5" y="778.7988">void CreateSurface();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="789.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="1800.5" y="796.4082">void PickPhysicalDevice();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="806.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="305" x="1800.5" y="814.0176">bool IsDeviceSuitable(VkPhysicalDevice device);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="824.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="534" x="1800.5" y="831.627">QueueFamilyIndices FindQueueFamilyIndices(const VkPhysicalDevice device) const;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="842.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="395" x="1800.5" y="849.2363">bool CheckDeviceExtensionSupport(VkPhysicalDevice device);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="859.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="617" x="1800.5" y="866.8457">SwapChainSupportDetails QuerySwapChainSupportDetails(const VkPhysicalDevice device) const;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="877.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="1800.5" y="884.4551">void CreateLogicalDevice();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1788.5" y="894.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="1800.5" y="902.0645">void CreateCommandPool();</text><ellipse cx="1791.5" cy="915.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1701" x="1800.5" y="919.6738">VKAPI_ATTR VkBool32 VKAPI_CALL DebugCallback(        VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,        VkDebugUtilsMessageTypeFlagsEXT messageType,        const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,        void *pUserData);</text></g><!--class SwapChain--><g id="elem_SwapChain"><rect codeLine="1" fill="#F1F1F1" height="946.0781" id="SwapChain" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1509" x="3542.5" y="7"/><ellipse cx="4257.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4260.0156,18.875 Q4260.1719,18.6563 4260.3594,18.5469 Q4260.5469,18.4375 4260.7656,18.4375 Q4261.1406,18.4375 4261.375,18.7031 Q4261.6094,18.9531 4261.6094,19.5625 L4261.6094,21.0156 Q4261.6094,21.625 4261.375,21.8906 Q4261.1406,22.1563 4260.7656,22.1563 Q4260.4219,22.1563 4260.2188,21.9531 Q4260.0156,21.7656 4259.9063,21.25 Q4259.8594,20.8906 4259.6719,20.7031 Q4259.3438,20.3281 4258.7344,20.1094 Q4258.125,19.8906 4257.5,19.8906 Q4256.7344,19.8906 4256.0938,20.2188 Q4255.4688,20.5469 4254.9688,21.2969 Q4254.4844,22.0469 4254.4844,23.0781 L4254.4844,24.1719 Q4254.4844,25.4063 4255.375,26.2344 Q4256.2656,27.0469 4257.8594,27.0469 Q4258.7969,27.0469 4259.4531,26.7969 Q4259.8438,26.6406 4260.2656,26.2031 Q4260.5313,25.9375 4260.6719,25.8594 Q4260.8281,25.7813 4261.0313,25.7813 Q4261.3594,25.7813 4261.6094,26.0469 Q4261.875,26.2969 4261.875,26.6406 Q4261.875,26.9844 4261.5313,27.3906 Q4261.0313,27.9688 4260.2344,28.2969 Q4259.1563,28.75 4257.8594,28.75 Q4256.3438,28.75 4255.1406,28.125 Q4254.1563,27.625 4253.4688,26.5625 Q4252.7813,25.4844 4252.7813,24.2031 L4252.7813,23.0469 Q4252.7813,21.7188 4253.3906,20.5781 Q4254.0156,19.4219 4255.1094,18.8125 Q4256.2031,18.1875 4257.4375,18.1875 Q4258.1719,18.1875 4258.8125,18.3594 Q4259.4688,18.5156 4260.0156,18.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="4277.75" y="28.7285">SwapChain</text><line style="stroke:#181818;stroke-width:0.5;" x1="3543.5" x2="5050.5" y1="39" y2="39"/><ellipse cx="3553.5" cy="53.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="293" x="3562.5" y="57.5332">const unsigned int MAX_FRAMES_IN_FLIGHT;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="3562.5" y="75.1426">&#160;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="3562.5" y="92.752">&#160;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="103.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="3562.5" y="110.3613">Device &amp;r_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="120.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="3562.5" y="127.9707">VkExtent2D m_WindowExtent;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="138.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="307" x="3562.5" y="145.5801">std::shared_ptr&lt;SwapChain&gt; sp_OldSwapChain;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="155.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="3562.5" y="163.1895">VkSwapchainKHR m_SwapChain;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="173.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="3562.5" y="180.7988">std::vector&lt;VkImage&gt; m_SwapChainImages;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="191.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="242" x="3562.5" y="198.4082">VkFormat m_SwapChainImageFormat;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="208.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="242" x="3562.5" y="216.0176">VkFormat m_SwapChainDepthFormat;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="226.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="3562.5" y="233.627">VkExtent2D m_SwapChainImageExtent;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="244.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="3562.5" y="251.2363">std::vector&lt;VkImageView&gt; m_SwapChainImageViews;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="261.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="3562.5" y="268.8457">VkRenderPass m_RenderPass;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="279.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="3562.5" y="286.4551">std::vector&lt;VkImage&gt; m_DepthImages;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="296.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="355" x="3562.5" y="304.0645">std::vector&lt;VkDeviceMemory&gt; m_DepthImageMemories;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="314.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="3562.5" y="321.6738">std::vector&lt;VkImageView&gt; m_DepthImageViews;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="332.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="360" x="3562.5" y="339.2832">std::vector&lt;VkFramebuffer&gt; m_SwapChainFrameBuffers;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="349.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="373" x="3562.5" y="356.8926">std::vector&lt;VkSemaphore&gt; m_ImageAvailableSemaphores;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="367.2734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="3562.5" y="374.502">std::vector&lt;VkSemaphore&gt; m_RenderFinishedSemaphores;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="384.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="3562.5" y="392.1113">std::vector&lt;VkFence&gt; m_InFlightFences;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="402.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="3562.5" y="409.7207">std::vector&lt;VkFence&gt; m_ImagesInFlight;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="420.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="3562.5" y="427.3301">size_t m_CurrentFrame = 0;</text><line style="stroke:#181818;stroke-width:0.5;" x1="3543.5" x2="5050.5" y1="434.4063" y2="434.4063"/><ellipse cx="3553.5" cy="448.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="3562.5" y="452.9395">SwapChain(Device &amp;device, VkExtent2D windowExtent);</text><ellipse cx="3553.5" cy="466.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="600" x="3562.5" y="470.5488">SwapChain(Device &amp;device, VkExtent2D windowExtent, std::shared_ptr&lt;SwapChain&gt; previous);</text><ellipse cx="3553.5" cy="483.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="3562.5" y="488.1582">~SwapChain();</text><ellipse cx="3553.5" cy="501.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="3562.5" y="505.7676">SwapChain(const SwapChain &amp;) = delete;</text><ellipse cx="3553.5" cy="519.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="3562.5" y="523.377">SwapChain &amp;operator=(const SwapChain &amp;) = delete;</text><ellipse cx="3553.5" cy="536.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="453" x="3562.5" y="540.9863">inline VkSwapchainKHR GetSwapChain() const { return m_SwapChain; }</text><ellipse cx="3553.5" cy="554.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="536" x="3562.5" y="558.5957">inline size_t GetSwapChainImageCount() const { return m_SwapChainImages.size(); }</text><ellipse cx="3553.5" cy="571.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="568" x="3562.5" y="576.2051">inline VkFormat GetSwapChainImageFormat() const { return m_SwapChainImageFormat; }</text><ellipse cx="3553.5" cy="589.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="568" x="3562.5" y="593.8145">inline VkExtent2D GetSwapChainImageExtent() const { return m_SwapChainImageExtent; }</text><ellipse cx="3553.5" cy="607.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="470" x="3562.5" y="611.4238">inline uint32_t GetWidth() const { return m_SwapChainImageExtent.width; }</text><ellipse cx="3553.5" cy="624.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="481" x="3562.5" y="629.0332">inline uint32_t GetHeight() const { return m_SwapChainImageExtent.height; }</text><ellipse cx="3553.5" cy="642.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="679" x="3562.5" y="646.6426">inline VkImageView GetSwapChainImageView(size_t index) const { return m_SwapChainImageViews[index]; }</text><ellipse cx="3553.5" cy="660.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="3562.5" y="664.252">inline VkRenderPass GetRenderPass() const { return m_RenderPass; }</text><ellipse cx="3553.5" cy="677.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="987" x="3562.5" y="681.8613">inline float GetExtentAspectRatio() const { return static_cast&lt;float&gt;(m_SwapChainImageExtent.width) / static_cast&lt;float&gt;(m_SwapChainImageExtent.height); }</text><ellipse cx="3553.5" cy="695.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="643" x="3562.5" y="699.4707">inline VkFramebuffer GetFrameBuffer(size_t index) const { return m_SwapChainFrameBuffers[index]; }</text><ellipse cx="3553.5" cy="712.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1483" x="3562.5" y="717.0801">inline bool CompareSwapFormats(const SwapChain &amp;swapChain) const    {        return swapChain.m_SwapChainDepthFormat == m_SwapChainDepthFormat &amp;&amp; swapChain.m_SwapChainImageFormat == m_SwapChainImageFormat;    }</text><ellipse cx="3553.5" cy="730.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="3562.5" y="734.6895">VkFormat FindDepthFormat();</text><ellipse cx="3553.5" cy="748.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="326" x="3562.5" y="752.2988">VkResult AcquireNextImage(uint32_t *pImageIndex);</text><ellipse cx="3553.5" cy="765.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="591" x="3562.5" y="769.9082">VkResult SubmitCommandBuffers(const VkCommandBuffer *pBuffers, uint32_t *pImageIndex);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="780.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="3562.5" y="787.5176">void Init();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="797.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="3562.5" y="805.127">void CreateSwapChain();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="815.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="490" x="3562.5" y="822.7363">VkExtent2D ChooseSwapChainExtent(VkSurfaceCapabilitiesKHR capabilities);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="833.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="688" x="3562.5" y="840.3457">VkSurfaceFormatKHR ChooseSwapChainSurfaceFormat(const std::vector&lt;VkSurfaceFormatKHR&gt; &amp;formats);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="850.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="702" x="3562.5" y="857.9551">VkPresentModeKHR CHooseSwapChainPresentMode(const std::vector&lt;VkPresentModeKHR&gt; &amp;presentModes);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="868.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="3562.5" y="875.5645">void CreateImageViews();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="885.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="3562.5" y="893.1738">void CreateRenderPass();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="903.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="3562.5" y="910.7832">void CreateDepthResources();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="921.1641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="3562.5" y="928.3926">void CreateFrameBuffers();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550.5" y="938.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="3562.5" y="946.002">void CreateSyncObjects();</text></g><!--class PipelineConfigInfo--><g id="elem_PipelineConfigInfo"><rect codeLine="1" fill="#F1F1F1" height="347.3594" id="PipelineConfigInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="435" x="184.5" y="1013"/><ellipse cx="340.75" cy="1029" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M338.8594,1033.5625 Q338.6406,1033.8281 338.5,1033.9063 Q338.3594,1033.9844 338.1719,1033.9844 Q337.7813,1033.9844 337.5313,1033.7188 Q337.2969,1033.4531 337.2969,1032.8594 L337.2969,1031.7031 Q337.2969,1031.0938 337.5313,1030.8438 Q337.7813,1030.5781 338.1719,1030.5781 Q338.4688,1030.5781 338.6719,1030.7344 Q338.875,1030.8906 338.9844,1031.2656 Q339.0938,1031.625 339.2031,1031.7656 Q339.4531,1032.0156 340.0625,1032.2813 Q340.6719,1032.5469 341.4063,1032.5469 Q342.5469,1032.5469 343.2656,1032.0156 Q343.7344,1031.6875 343.7344,1031.2188 Q343.7344,1030.9063 343.5156,1030.625 Q343.2969,1030.3438 342.7813,1030.1719 Q342.4531,1030.0469 341.2969,1029.8281 Q339.9063,1029.5625 339.1875,1029.2031 Q338.4688,1028.8438 338.0469,1028.1875 Q337.6406,1027.5156 337.6406,1026.7344 Q337.6406,1025.5156 338.6563,1024.6094 Q339.6875,1023.6875 341.3281,1023.6875 Q341.9844,1023.6875 342.5313,1023.8281 Q343.0938,1023.9688 343.5625,1024.2656 Q343.8906,1023.9531 344.2188,1023.9531 Q344.5938,1023.9531 344.8281,1024.2188 Q345.0625,1024.4688 345.0625,1025.0781 L345.0625,1026.3594 Q345.0625,1026.9688 344.8281,1027.2344 Q344.5938,1027.4844 344.2188,1027.4844 Q343.9063,1027.4844 343.6719,1027.2969 Q343.4844,1027.1563 343.3906,1026.7344 Q343.3125,1026.3125 343.1719,1026.125 Q342.9219,1025.8125 342.4375,1025.6094 Q341.9688,1025.3906 341.3281,1025.3906 Q340.4063,1025.3906 339.875,1025.8125 Q339.3438,1026.2344 339.3438,1026.7031 Q339.3438,1027.0156 339.5625,1027.3125 Q339.7813,1027.6094 340.2031,1027.7813 Q340.4844,1027.8906 341.7813,1028.1563 Q343.0938,1028.4063 343.7969,1028.7188 Q344.5,1029.0156 344.9688,1029.6719 Q345.4375,1030.3281 345.4375,1031.2344 Q345.4375,1032.5 344.5469,1033.25 Q343.3594,1034.25 341.5313,1034.25 Q340.8281,1034.25 340.1563,1034.0781 Q339.5,1033.9063 338.8594,1033.5625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="361.25" y="1034.7285">PipelineConfigInfo</text><line style="stroke:#181818;stroke-width:0.5;" x1="185.5" x2="618.5" y1="1045" y2="1045"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="190.5" y="1063.5332">// VkViewport viewport;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="190.5" y="1081.1426">// VkRect2D scissor;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="190.5" y="1098.752">// VkPipelineViewportStateCreateInfo viewportInfo;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="378" x="190.5" y="1116.3613">VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="355" x="190.5" y="1133.9707">VkPipelineRasterizationStateCreateInfo rasterizationInfo;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="344" x="190.5" y="1151.5801">VkPipelineMultisampleStateCreateInfo multisampleInfo;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="190.5" y="1169.1895">VkPipelineColorBlendAttachmentState colorBlendAttachment;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="190.5" y="1186.7988">VkPipelineColorBlendStateCreateInfo colorBlendInfo;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="354" x="190.5" y="1204.4082">VkPipelineDepthStencilStateCreateInfo depthStencilInfo;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="190.5" y="1222.0176">std::vector&lt;VkDynamicState&gt; dynamicStatesEnables;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="335" x="190.5" y="1239.627">VkPipelineDynamicStateCreateInfo dynamicStateInfo;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="347" x="190.5" y="1257.2363">VkPipelineLayout pipelineLayout = VK_NULL_HANDLE;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="190.5" y="1274.8457">VkRenderPass renderPass = VK_NULL_HANDLE;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="190.5" y="1292.4551">uint32_t subpass = 0;</text><line style="stroke:#181818;stroke-width:0.5;" x1="185.5" x2="618.5" y1="1299.5313" y2="1299.5313"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="190.5" y="1318.0645">PipelineConfigInfo() = default;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="348" x="190.5" y="1335.6738">PipelineConfigInfo(const PipelineConfigInfo &amp;) = delete;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="423" x="190.5" y="1353.2832">PipelineConfigInfo &amp;operator=(const PipelineConfigInfo &amp;) = delete;</text></g><!--class Pipeline--><g id="elem_Pipeline"><rect codeLine="22" fill="#F1F1F1" height="312.1406" id="Pipeline" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="932" x="655" y="1030.5"/><ellipse cx="1091.75" cy="1046.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1094.5156,1042.375 Q1094.6719,1042.1563 1094.8594,1042.0469 Q1095.0469,1041.9375 1095.2656,1041.9375 Q1095.6406,1041.9375 1095.875,1042.2031 Q1096.1094,1042.4531 1096.1094,1043.0625 L1096.1094,1044.5156 Q1096.1094,1045.125 1095.875,1045.3906 Q1095.6406,1045.6563 1095.2656,1045.6563 Q1094.9219,1045.6563 1094.7188,1045.4531 Q1094.5156,1045.2656 1094.4063,1044.75 Q1094.3594,1044.3906 1094.1719,1044.2031 Q1093.8438,1043.8281 1093.2344,1043.6094 Q1092.625,1043.3906 1092,1043.3906 Q1091.2344,1043.3906 1090.5938,1043.7188 Q1089.9688,1044.0469 1089.4688,1044.7969 Q1088.9844,1045.5469 1088.9844,1046.5781 L1088.9844,1047.6719 Q1088.9844,1048.9063 1089.875,1049.7344 Q1090.7656,1050.5469 1092.3594,1050.5469 Q1093.2969,1050.5469 1093.9531,1050.2969 Q1094.3438,1050.1406 1094.7656,1049.7031 Q1095.0313,1049.4375 1095.1719,1049.3594 Q1095.3281,1049.2813 1095.5313,1049.2813 Q1095.8594,1049.2813 1096.1094,1049.5469 Q1096.375,1049.7969 1096.375,1050.1406 Q1096.375,1050.4844 1096.0313,1050.8906 Q1095.5313,1051.4688 1094.7344,1051.7969 Q1093.6563,1052.25 1092.3594,1052.25 Q1090.8438,1052.25 1089.6406,1051.625 Q1088.6563,1051.125 1087.9688,1050.0625 Q1087.2813,1048.9844 1087.2813,1047.7031 L1087.2813,1046.5469 Q1087.2813,1045.2188 1087.8906,1044.0781 Q1088.5156,1042.9219 1089.6094,1042.3125 Q1090.7031,1041.6875 1091.9375,1041.6875 Q1092.6719,1041.6875 1093.3125,1041.8594 Q1093.9688,1042.0156 1094.5156,1042.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="1112.25" y="1052.2285">Pipeline</text><line style="stroke:#181818;stroke-width:0.5;" x1="656" x2="1586" y1="1062.5" y2="1062.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="663" y="1073.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="675" y="1081.0332">Device &amp;r_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="663" y="1091.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="675" y="1098.6426">VkShaderModule m_VertShaderModule;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="663" y="1109.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="675" y="1116.252">VkShaderModule m_FragShaderModule;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="663" y="1126.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="675" y="1133.8613">VkPipeline m_GraphicsPipeline;</text><line style="stroke:#181818;stroke-width:0.5;" x1="656" x2="1586" y1="1140.9375" y2="1140.9375"/><ellipse cx="666" cy="1155.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="906" x="675" y="1159.4707">Pipeline(        Device &amp;device,        const std::string &amp;vertFilePath,        const std::string &amp;fragFilePath,        const PipelineConfigInfo &amp;configInfo);</text><ellipse cx="666" cy="1172.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="675" y="1177.0801">~Pipeline();</text><ellipse cx="666" cy="1190.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="675" y="1194.6895">Pipeline(const Pipeline &amp;) = delete;</text><ellipse cx="666" cy="1208.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="675" y="1212.2988">Pipeline &amp;operator=(const Pipeline &amp;) = delete;</text><ellipse cx="666" cy="1225.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="675" y="1229.9082">void Bind(VkCommandBuffer commandBuffer);</text><ellipse cx="666" cy="1243.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="391" x="675" y="1247.5176">void DefaultPipelineConfigInfo(PipelineConfigInfo &amp;configInfo);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="675" y="1265.127">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="663" y="1275.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="903" x="675" y="1282.7363">void CreateGraphicsPipeline(        const std::string &amp;vertFilePath,        const std::string &amp;fragFilePath,        const PipelineConfigInfo &amp;configInfo);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="663" y="1293.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="550" x="675" y="1300.3457">void CreateShaderModule(const std::vector&lt;char&gt; &amp;code, VkShaderModule *pModule);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="675" y="1317.9551">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="663" y="1328.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="345" x="675" y="1335.5645">std::vector&lt;char&gt; ReadFile(const std::string &amp;filePath);</text></g><!--class Vertex--><g id="elem_Vertex"><rect codeLine="1" fill="#F1F1F1" height="118.4375" id="Vertex" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="514" x="1622" y="1127.5"/><ellipse cx="1854.75" cy="1143.5" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1852.8594,1148.0625 Q1852.6406,1148.3281 1852.5,1148.4063 Q1852.3594,1148.4844 1852.1719,1148.4844 Q1851.7813,1148.4844 1851.5313,1148.2188 Q1851.2969,1147.9531 1851.2969,1147.3594 L1851.2969,1146.2031 Q1851.2969,1145.5938 1851.5313,1145.3438 Q1851.7813,1145.0781 1852.1719,1145.0781 Q1852.4688,1145.0781 1852.6719,1145.2344 Q1852.875,1145.3906 1852.9844,1145.7656 Q1853.0938,1146.125 1853.2031,1146.2656 Q1853.4531,1146.5156 1854.0625,1146.7813 Q1854.6719,1147.0469 1855.4063,1147.0469 Q1856.5469,1147.0469 1857.2656,1146.5156 Q1857.7344,1146.1875 1857.7344,1145.7188 Q1857.7344,1145.4063 1857.5156,1145.125 Q1857.2969,1144.8438 1856.7813,1144.6719 Q1856.4531,1144.5469 1855.2969,1144.3281 Q1853.9063,1144.0625 1853.1875,1143.7031 Q1852.4688,1143.3438 1852.0469,1142.6875 Q1851.6406,1142.0156 1851.6406,1141.2344 Q1851.6406,1140.0156 1852.6563,1139.1094 Q1853.6875,1138.1875 1855.3281,1138.1875 Q1855.9844,1138.1875 1856.5313,1138.3281 Q1857.0938,1138.4688 1857.5625,1138.7656 Q1857.8906,1138.4531 1858.2188,1138.4531 Q1858.5938,1138.4531 1858.8281,1138.7188 Q1859.0625,1138.9688 1859.0625,1139.5781 L1859.0625,1140.8594 Q1859.0625,1141.4688 1858.8281,1141.7344 Q1858.5938,1141.9844 1858.2188,1141.9844 Q1857.9063,1141.9844 1857.6719,1141.7969 Q1857.4844,1141.6563 1857.3906,1141.2344 Q1857.3125,1140.8125 1857.1719,1140.625 Q1856.9219,1140.3125 1856.4375,1140.1094 Q1855.9688,1139.8906 1855.3281,1139.8906 Q1854.4063,1139.8906 1853.875,1140.3125 Q1853.3438,1140.7344 1853.3438,1141.2031 Q1853.3438,1141.5156 1853.5625,1141.8125 Q1853.7813,1142.1094 1854.2031,1142.2813 Q1854.4844,1142.3906 1855.7813,1142.6563 Q1857.0938,1142.9063 1857.7969,1143.2188 Q1858.5,1143.5156 1858.9688,1144.1719 Q1859.4375,1144.8281 1859.4375,1145.7344 Q1859.4375,1147 1858.5469,1147.75 Q1857.3594,1148.75 1855.5313,1148.75 Q1854.8281,1148.75 1854.1563,1148.5781 Q1853.5,1148.4063 1852.8594,1148.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="1875.25" y="1149.2285">Vertex</text><line style="stroke:#181818;stroke-width:0.5;" x1="1623" x2="2135" y1="1159.5" y2="1159.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="1628" y="1178.0332">glm::vec3 Position;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="1628" y="1195.6426">glm::vec3 Color;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1623" x2="2135" y1="1202.7188" y2="1202.7188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="490" x="1628" y="1221.252">static std::vector&lt;VkVertexInputBindingDescription&gt; GetBindingDescriptions();</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="502" x="1628" y="1238.8613">static std::vector&lt;VkVertexInputAttributeDescription&gt; GetAttributeDescriptions();</text></g><!--class Builder--><g id="elem_Builder"><rect codeLine="9" fill="#F1F1F1" height="83.2188" id="Builder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="207" x="2171.5" y="1145"/><ellipse cx="2248.75" cy="1161" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2246.8594,1165.5625 Q2246.6406,1165.8281 2246.5,1165.9063 Q2246.3594,1165.9844 2246.1719,1165.9844 Q2245.7813,1165.9844 2245.5313,1165.7188 Q2245.2969,1165.4531 2245.2969,1164.8594 L2245.2969,1163.7031 Q2245.2969,1163.0938 2245.5313,1162.8438 Q2245.7813,1162.5781 2246.1719,1162.5781 Q2246.4688,1162.5781 2246.6719,1162.7344 Q2246.875,1162.8906 2246.9844,1163.2656 Q2247.0938,1163.625 2247.2031,1163.7656 Q2247.4531,1164.0156 2248.0625,1164.2813 Q2248.6719,1164.5469 2249.4063,1164.5469 Q2250.5469,1164.5469 2251.2656,1164.0156 Q2251.7344,1163.6875 2251.7344,1163.2188 Q2251.7344,1162.9063 2251.5156,1162.625 Q2251.2969,1162.3438 2250.7813,1162.1719 Q2250.4531,1162.0469 2249.2969,1161.8281 Q2247.9063,1161.5625 2247.1875,1161.2031 Q2246.4688,1160.8438 2246.0469,1160.1875 Q2245.6406,1159.5156 2245.6406,1158.7344 Q2245.6406,1157.5156 2246.6563,1156.6094 Q2247.6875,1155.6875 2249.3281,1155.6875 Q2249.9844,1155.6875 2250.5313,1155.8281 Q2251.0938,1155.9688 2251.5625,1156.2656 Q2251.8906,1155.9531 2252.2188,1155.9531 Q2252.5938,1155.9531 2252.8281,1156.2188 Q2253.0625,1156.4688 2253.0625,1157.0781 L2253.0625,1158.3594 Q2253.0625,1158.9688 2252.8281,1159.2344 Q2252.5938,1159.4844 2252.2188,1159.4844 Q2251.9063,1159.4844 2251.6719,1159.2969 Q2251.4844,1159.1563 2251.3906,1158.7344 Q2251.3125,1158.3125 2251.1719,1158.125 Q2250.9219,1157.8125 2250.4375,1157.6094 Q2249.9688,1157.3906 2249.3281,1157.3906 Q2248.4063,1157.3906 2247.875,1157.8125 Q2247.3438,1158.2344 2247.3438,1158.7031 Q2247.3438,1159.0156 2247.5625,1159.3125 Q2247.7813,1159.6094 2248.2031,1159.7813 Q2248.4844,1159.8906 2249.7813,1160.1563 Q2251.0938,1160.4063 2251.7969,1160.7188 Q2252.5,1161.0156 2252.9688,1161.6719 Q2253.4375,1162.3281 2253.4375,1163.2344 Q2253.4375,1164.5 2252.5469,1165.25 Q2251.3594,1166.25 2249.5313,1166.25 Q2248.8281,1166.25 2248.1563,1166.0781 Q2247.5,1165.9063 2246.8594,1165.5625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="2269.25" y="1166.7285">Builder</text><line style="stroke:#181818;stroke-width:0.5;" x1="2172.5" x2="2377.5" y1="1177" y2="1177"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="2177.5" y="1195.5332">std::vector&lt;Vertex&gt; vertices{};</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="2177.5" y="1213.1426">std::vector&lt;uint32_t&gt; indices{};</text><line style="stroke:#181818;stroke-width:0.5;" x1="2172.5" x2="2377.5" y1="1220.2188" y2="1220.2188"/></g><!--class Model--><g id="elem_Model"><rect codeLine="15" fill="#F1F1F1" height="347.3594" id="Model" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="420" x="2414" y="1013"/><ellipse cx="2600.75" cy="1029" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2603.5156,1024.875 Q2603.6719,1024.6563 2603.8594,1024.5469 Q2604.0469,1024.4375 2604.2656,1024.4375 Q2604.6406,1024.4375 2604.875,1024.7031 Q2605.1094,1024.9531 2605.1094,1025.5625 L2605.1094,1027.0156 Q2605.1094,1027.625 2604.875,1027.8906 Q2604.6406,1028.1563 2604.2656,1028.1563 Q2603.9219,1028.1563 2603.7188,1027.9531 Q2603.5156,1027.7656 2603.4063,1027.25 Q2603.3594,1026.8906 2603.1719,1026.7031 Q2602.8438,1026.3281 2602.2344,1026.1094 Q2601.625,1025.8906 2601,1025.8906 Q2600.2344,1025.8906 2599.5938,1026.2188 Q2598.9688,1026.5469 2598.4688,1027.2969 Q2597.9844,1028.0469 2597.9844,1029.0781 L2597.9844,1030.1719 Q2597.9844,1031.4063 2598.875,1032.2344 Q2599.7656,1033.0469 2601.3594,1033.0469 Q2602.2969,1033.0469 2602.9531,1032.7969 Q2603.3438,1032.6406 2603.7656,1032.2031 Q2604.0313,1031.9375 2604.1719,1031.8594 Q2604.3281,1031.7813 2604.5313,1031.7813 Q2604.8594,1031.7813 2605.1094,1032.0469 Q2605.375,1032.2969 2605.375,1032.6406 Q2605.375,1032.9844 2605.0313,1033.3906 Q2604.5313,1033.9688 2603.7344,1034.2969 Q2602.6563,1034.75 2601.3594,1034.75 Q2599.8438,1034.75 2598.6406,1034.125 Q2597.6563,1033.625 2596.9688,1032.5625 Q2596.2813,1031.4844 2596.2813,1030.2031 L2596.2813,1029.0469 Q2596.2813,1027.7188 2596.8906,1026.5781 Q2597.5156,1025.4219 2598.6094,1024.8125 Q2599.7031,1024.1875 2600.9375,1024.1875 Q2601.6719,1024.1875 2602.3125,1024.3594 Q2602.9688,1024.5156 2603.5156,1024.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="2621.25" y="1034.7285">Model</text><line style="stroke:#181818;stroke-width:0.5;" x1="2415" x2="2833" y1="1045" y2="1045"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2422" y="1056.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="2434" y="1063.5332">Device &amp;r_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2422" y="1073.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="2434" y="1081.1426">VkBuffer m_VertexBuffer;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2422" y="1091.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="2434" y="1098.752">VkDeviceMemory m_VertexBufferMemory;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2422" y="1109.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="2434" y="1116.3613">uint32_t m_VertexCount;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2422" y="1126.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="2434" y="1133.9707">bool m_HasIndexBuffer = false;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2422" y="1144.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="2434" y="1151.5801">VkBuffer m_IndexBuffer;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2422" y="1161.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="2434" y="1169.1895">VkDeviceMemory m_IndexBufferMemory;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2422" y="1179.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="2434" y="1186.7988">uint32_t m_IndexCount;</text><line style="stroke:#181818;stroke-width:0.5;" x1="2415" x2="2833" y1="1193.875" y2="1193.875"/><ellipse cx="2425" cy="1208.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="2434" y="1212.4082">Model(Device &amp;device, const Builder &amp;builder);</text><ellipse cx="2425" cy="1225.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="2434" y="1230.0176">~Model();</text><ellipse cx="2425" cy="1243.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="2434" y="1247.627">Model(const Model &amp;) = delete;</text><ellipse cx="2425" cy="1261.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="271" x="2434" y="1265.2363">Model &amp;operator=(const Model &amp;) = delete;</text><ellipse cx="2425" cy="1278.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="2434" y="1282.8457">void Bind(VkCommandBuffer commandBuffer);</text><ellipse cx="2425" cy="1296.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="297" x="2434" y="1300.4551">void Draw(VkCommandBuffer commandBuffer);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="2434" y="1318.0645">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2422" y="1328.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394" x="2434" y="1335.6738">void CreateVertexBuffers(const std::vector&lt;Vertex&gt; &amp;vertices);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2422" y="1346.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="393" x="2434" y="1353.2832">void CreateIndexBuffers(const std::vector&lt;uint32_t&gt; &amp;indices);</text></g><!--class TransformComponent--><g id="elem_TransformComponent"><rect codeLine="1" fill="#F1F1F1" height="118.4375" id="TransformComponent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="211" x="296.5" y="1596.5"/><ellipse cx="329.95" cy="1612.5" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M328.0594,1617.0625 Q327.8406,1617.3281 327.7,1617.4063 Q327.5594,1617.4844 327.3719,1617.4844 Q326.9813,1617.4844 326.7313,1617.2188 Q326.4969,1616.9531 326.4969,1616.3594 L326.4969,1615.2031 Q326.4969,1614.5938 326.7313,1614.3438 Q326.9813,1614.0781 327.3719,1614.0781 Q327.6688,1614.0781 327.8719,1614.2344 Q328.075,1614.3906 328.1844,1614.7656 Q328.2938,1615.125 328.4031,1615.2656 Q328.6531,1615.5156 329.2625,1615.7813 Q329.8719,1616.0469 330.6063,1616.0469 Q331.7469,1616.0469 332.4656,1615.5156 Q332.9344,1615.1875 332.9344,1614.7188 Q332.9344,1614.4063 332.7156,1614.125 Q332.4969,1613.8438 331.9813,1613.6719 Q331.6531,1613.5469 330.4969,1613.3281 Q329.1063,1613.0625 328.3875,1612.7031 Q327.6688,1612.3438 327.2469,1611.6875 Q326.8406,1611.0156 326.8406,1610.2344 Q326.8406,1609.0156 327.8563,1608.1094 Q328.8875,1607.1875 330.5281,1607.1875 Q331.1844,1607.1875 331.7313,1607.3281 Q332.2938,1607.4688 332.7625,1607.7656 Q333.0906,1607.4531 333.4188,1607.4531 Q333.7938,1607.4531 334.0281,1607.7188 Q334.2625,1607.9688 334.2625,1608.5781 L334.2625,1609.8594 Q334.2625,1610.4688 334.0281,1610.7344 Q333.7938,1610.9844 333.4188,1610.9844 Q333.1063,1610.9844 332.8719,1610.7969 Q332.6844,1610.6563 332.5906,1610.2344 Q332.5125,1609.8125 332.3719,1609.625 Q332.1219,1609.3125 331.6375,1609.1094 Q331.1688,1608.8906 330.5281,1608.8906 Q329.6063,1608.8906 329.075,1609.3125 Q328.5438,1609.7344 328.5438,1610.2031 Q328.5438,1610.5156 328.7625,1610.8125 Q328.9813,1611.1094 329.4031,1611.2813 Q329.6844,1611.3906 330.9813,1611.6563 Q332.2938,1611.9063 332.9969,1612.2188 Q333.7,1612.5156 334.1688,1613.1719 Q334.6375,1613.8281 334.6375,1614.7344 Q334.6375,1616 333.7469,1616.75 Q332.5594,1617.75 330.7313,1617.75 Q330.0281,1617.75 329.3563,1617.5781 Q328.7,1617.4063 328.0594,1617.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="348.05" y="1618.2285">TransformComponent</text><line style="stroke:#181818;stroke-width:0.5;" x1="297.5" x2="506.5" y1="1628.5" y2="1628.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="302.5" y="1647.0332">glm::vec3 translation{};</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="302.5" y="1664.6426">glm::vec3 scale{1.0f, 1.0f, 1.0f};</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="302.5" y="1682.252">glm::vec3 rotation{};</text><line style="stroke:#181818;stroke-width:0.5;" x1="297.5" x2="506.5" y1="1689.3281" y2="1689.3281"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="302.5" y="1707.8613">glm::mat4 GetModelMat();</text></g><!--class DivineGameObject--><g id="elem_DivineGameObject"><rect codeLine="10" fill="#F1F1F1" height="312.1406" id="DivineGameObject" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="502" x="543" y="1499.5"/><ellipse cx="730.75" cy="1515.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M733.5156,1511.375 Q733.6719,1511.1563 733.8594,1511.0469 Q734.0469,1510.9375 734.2656,1510.9375 Q734.6406,1510.9375 734.875,1511.2031 Q735.1094,1511.4531 735.1094,1512.0625 L735.1094,1513.5156 Q735.1094,1514.125 734.875,1514.3906 Q734.6406,1514.6563 734.2656,1514.6563 Q733.9219,1514.6563 733.7188,1514.4531 Q733.5156,1514.2656 733.4063,1513.75 Q733.3594,1513.3906 733.1719,1513.2031 Q732.8438,1512.8281 732.2344,1512.6094 Q731.625,1512.3906 731,1512.3906 Q730.2344,1512.3906 729.5938,1512.7188 Q728.9688,1513.0469 728.4688,1513.7969 Q727.9844,1514.5469 727.9844,1515.5781 L727.9844,1516.6719 Q727.9844,1517.9063 728.875,1518.7344 Q729.7656,1519.5469 731.3594,1519.5469 Q732.2969,1519.5469 732.9531,1519.2969 Q733.3438,1519.1406 733.7656,1518.7031 Q734.0313,1518.4375 734.1719,1518.3594 Q734.3281,1518.2813 734.5313,1518.2813 Q734.8594,1518.2813 735.1094,1518.5469 Q735.375,1518.7969 735.375,1519.1406 Q735.375,1519.4844 735.0313,1519.8906 Q734.5313,1520.4688 733.7344,1520.7969 Q732.6563,1521.25 731.3594,1521.25 Q729.8438,1521.25 728.6406,1520.625 Q727.6563,1520.125 726.9688,1519.0625 Q726.2813,1517.9844 726.2813,1516.7031 L726.2813,1515.5469 Q726.2813,1514.2188 726.8906,1513.0781 Q727.5156,1511.9219 728.6094,1511.3125 Q729.7031,1510.6875 730.9375,1510.6875 Q731.6719,1510.6875 732.3125,1510.8594 Q732.9688,1511.0156 733.5156,1511.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="751.25" y="1521.2285">DivineGameObject</text><line style="stroke:#181818;stroke-width:0.5;" x1="544" x2="1044" y1="1531.5" y2="1531.5"/><ellipse cx="554" cy="1545.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="563" y="1550.0332">typedef unsigned int id_t;</text><ellipse cx="554" cy="1563.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="563" y="1567.6426">std::shared_ptr&lt;Model&gt; sp_Model{};</text><ellipse cx="554" cy="1581.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="563" y="1585.252">glm::vec3 m_Color{};</text><ellipse cx="554" cy="1598.6328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="563" y="1602.8613">TransformComponent m_ModelMatrix{};</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="563" y="1620.4707">&#160;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="551" y="1630.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="563" y="1638.0801">id_t m_ID;</text><line style="stroke:#181818;stroke-width:0.5;" x1="544" x2="1044" y1="1645.1563" y2="1645.1563"/><ellipse cx="554" cy="1659.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="563" y="1663.6895">DivineGameObject(const DivineGameObject &amp;) = delete;</text><ellipse cx="554" cy="1677.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="431" x="563" y="1681.2988">DivineGameObject &amp;operator=(const DivineGameObject &amp;) = delete;</text><ellipse cx="554" cy="1694.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="445" x="563" y="1698.9082">DivineGameObject(DivineGameObject &amp;&amp;) = default;            // no const</text><ellipse cx="554" cy="1712.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="476" x="563" y="1716.5176">DivineGameObject &amp;operator=(DivineGameObject &amp;&amp;) = default; // no const</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="563" y="1734.127">&#160;</text><ellipse cx="554" cy="1747.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="258" x="563" y="1751.7363">DivineGameObject CreateGameObject();</text><ellipse cx="554" cy="1765.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="563" y="1769.3457">inline id_t GetID() const { return m_ID; }</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="563" y="1786.9551">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="551" y="1797.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="563" y="1804.5645">DivineGameObject(id_t objID)        : m_ID{objID} {}</text></g><!--class Renderer--><g id="elem_Renderer"><rect codeLine="1" fill="#F1F1F1" height="470.625" id="Renderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1419" x="1080.5" y="1420"/><ellipse cx="1755.75" cy="1436" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1758.5156,1431.875 Q1758.6719,1431.6563 1758.8594,1431.5469 Q1759.0469,1431.4375 1759.2656,1431.4375 Q1759.6406,1431.4375 1759.875,1431.7031 Q1760.1094,1431.9531 1760.1094,1432.5625 L1760.1094,1434.0156 Q1760.1094,1434.625 1759.875,1434.8906 Q1759.6406,1435.1563 1759.2656,1435.1563 Q1758.9219,1435.1563 1758.7188,1434.9531 Q1758.5156,1434.7656 1758.4063,1434.25 Q1758.3594,1433.8906 1758.1719,1433.7031 Q1757.8438,1433.3281 1757.2344,1433.1094 Q1756.625,1432.8906 1756,1432.8906 Q1755.2344,1432.8906 1754.5938,1433.2188 Q1753.9688,1433.5469 1753.4688,1434.2969 Q1752.9844,1435.0469 1752.9844,1436.0781 L1752.9844,1437.1719 Q1752.9844,1438.4063 1753.875,1439.2344 Q1754.7656,1440.0469 1756.3594,1440.0469 Q1757.2969,1440.0469 1757.9531,1439.7969 Q1758.3438,1439.6406 1758.7656,1439.2031 Q1759.0313,1438.9375 1759.1719,1438.8594 Q1759.3281,1438.7813 1759.5313,1438.7813 Q1759.8594,1438.7813 1760.1094,1439.0469 Q1760.375,1439.2969 1760.375,1439.6406 Q1760.375,1439.9844 1760.0313,1440.3906 Q1759.5313,1440.9688 1758.7344,1441.2969 Q1757.6563,1441.75 1756.3594,1441.75 Q1754.8438,1441.75 1753.6406,1441.125 Q1752.6563,1440.625 1751.9688,1439.5625 Q1751.2813,1438.4844 1751.2813,1437.2031 L1751.2813,1436.0469 Q1751.2813,1434.7188 1751.8906,1433.5781 Q1752.5156,1432.4219 1753.6094,1431.8125 Q1754.7031,1431.1875 1755.9375,1431.1875 Q1756.6719,1431.1875 1757.3125,1431.3594 Q1757.9688,1431.5156 1758.5156,1431.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="1776.25" y="1441.7285">Renderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="1081.5" x2="2498.5" y1="1452" y2="1452"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1088.5" y="1463.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="1100.5" y="1470.5332">Window &amp;r_Window;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1088.5" y="1480.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="1100.5" y="1488.1426">Device &amp;r_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1088.5" y="1498.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="285" x="1100.5" y="1505.752">std::unique_ptr&lt;SwapChain&gt; up_SwapChain;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1088.5" y="1516.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="1100.5" y="1523.3613">std::vector&lt;VkCommandBuffer&gt; m_CommandBuffers;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1088.5" y="1533.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="1100.5" y="1540.9707">uint32_t m_CurrentImageIndex;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1088.5" y="1551.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="1100.5" y="1558.5801">int m_CurrentFrameIndex = 0;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1088.5" y="1568.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="1100.5" y="1576.1895">bool m_IsFrameStart = false;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1081.5" x2="2498.5" y1="1583.2656" y2="1583.2656"/><ellipse cx="1091.5" cy="1597.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="286" x="1100.5" y="1601.7988">Renderer(Window &amp;window, Device &amp;device);</text><ellipse cx="1091.5" cy="1615.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="1100.5" y="1619.4082">~Renderer();</text><ellipse cx="1091.5" cy="1632.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="1100.5" y="1637.0176">Renderer(const Renderer &amp;) = delete;</text><ellipse cx="1091.5" cy="1650.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="1100.5" y="1654.627">Renderer &amp;operator=(const Renderer &amp;) = delete;</text><ellipse cx="1091.5" cy="1668.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="403" x="1100.5" y="1672.2363">inline bool IsFrameInProgress() const { return m_IsFrameStart; }</text><ellipse cx="1091.5" cy="1685.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1393" x="1100.5" y="1689.8457">inline VkCommandBuffer GetCurrentCommandBuffer() const    {        assert(m_IsFrameStart &amp;&amp;               "Can't get command buffer when frame not in progress");        return m_CommandBuffers[m_CurrentFrameIndex];    }</text><ellipse cx="1091.5" cy="1703.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1049" x="1100.5" y="1707.4551">inline int GetFrameIndex() const    {        assert(m_IsFrameStart &amp;&amp;               "Can't get frame index when frame not in progress");        return m_CurrentFrameIndex;    }</text><ellipse cx="1091.5" cy="1720.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="642" x="1100.5" y="1725.0645">inline VkRenderPass GetSwapChainRenderPass() const { return up_SwapChain-&gt;GetRenderPass(); }</text><ellipse cx="1091.5" cy="1738.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="539" x="1100.5" y="1742.6738">inline float GetAspectRatio() const { return up_SwapChain-&gt;GetExtentAspectRatio(); }</text><ellipse cx="1091.5" cy="1756.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="1100.5" y="1760.2832">VkCommandBuffer BeginFrame();</text><ellipse cx="1091.5" cy="1773.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="1100.5" y="1777.8926">void EndFrame();</text><ellipse cx="1091.5" cy="1791.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="450" x="1100.5" y="1795.502">void BeginSwapChainRenderPass(VkCommandBuffer commandBuffer);</text><ellipse cx="1091.5" cy="1808.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="439" x="1100.5" y="1813.1113">void EndSwapChainRenderPass(VkCommandBuffer commandBuffer);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="1100.5" y="1830.7207">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1088.5" y="1841.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="1100.5" y="1848.3301">void RecreateSwapChain();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1088.5" y="1858.7109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="1100.5" y="1865.9395">void CreateCommandBuffers();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1088.5" y="1876.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="1100.5" y="1883.5488">void FreeCommandBuffers();</text></g><!--class RenderSystem--><g id="elem_RenderSystem"><rect codeLine="1" fill="#F1F1F1" height="241.7031" id="RenderSystem" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="972" x="2535" y="1534.5"/><ellipse cx="2970.25" cy="1550.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2973.0156,1546.375 Q2973.1719,1546.1563 2973.3594,1546.0469 Q2973.5469,1545.9375 2973.7656,1545.9375 Q2974.1406,1545.9375 2974.375,1546.2031 Q2974.6094,1546.4531 2974.6094,1547.0625 L2974.6094,1548.5156 Q2974.6094,1549.125 2974.375,1549.3906 Q2974.1406,1549.6563 2973.7656,1549.6563 Q2973.4219,1549.6563 2973.2188,1549.4531 Q2973.0156,1549.2656 2972.9063,1548.75 Q2972.8594,1548.3906 2972.6719,1548.2031 Q2972.3438,1547.8281 2971.7344,1547.6094 Q2971.125,1547.3906 2970.5,1547.3906 Q2969.7344,1547.3906 2969.0938,1547.7188 Q2968.4688,1548.0469 2967.9688,1548.7969 Q2967.4844,1549.5469 2967.4844,1550.5781 L2967.4844,1551.6719 Q2967.4844,1552.9063 2968.375,1553.7344 Q2969.2656,1554.5469 2970.8594,1554.5469 Q2971.7969,1554.5469 2972.4531,1554.2969 Q2972.8438,1554.1406 2973.2656,1553.7031 Q2973.5313,1553.4375 2973.6719,1553.3594 Q2973.8281,1553.2813 2974.0313,1553.2813 Q2974.3594,1553.2813 2974.6094,1553.5469 Q2974.875,1553.7969 2974.875,1554.1406 Q2974.875,1554.4844 2974.5313,1554.8906 Q2974.0313,1555.4688 2973.2344,1555.7969 Q2972.1563,1556.25 2970.8594,1556.25 Q2969.3438,1556.25 2968.1406,1555.625 Q2967.1563,1555.125 2966.4688,1554.0625 Q2965.7813,1552.9844 2965.7813,1551.7031 L2965.7813,1550.5469 Q2965.7813,1549.2188 2966.3906,1548.0781 Q2967.0156,1546.9219 2968.1094,1546.3125 Q2969.2031,1545.6875 2970.4375,1545.6875 Q2971.1719,1545.6875 2971.8125,1545.8594 Q2972.4688,1546.0156 2973.0156,1546.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="2990.75" y="1556.2285">RenderSystem</text><line style="stroke:#181818;stroke-width:0.5;" x1="2536" x2="3506" y1="1566.5" y2="1566.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2543" y="1577.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="2555" y="1585.0332">Device &amp;r_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2543" y="1595.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="2555" y="1602.6426">VkPipelineLayout m_PipelineLayout;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2543" y="1613.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="2555" y="1620.252">std::unique_ptr&lt;Pipeline&gt; up_Pipeline;</text><line style="stroke:#181818;stroke-width:0.5;" x1="2536" x2="3506" y1="1627.3281" y2="1627.3281"/><ellipse cx="2546" cy="1641.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="383" x="2555" y="1645.8613">RenderSystem(Device &amp;device, VkRenderPass renderPass);</text><ellipse cx="2546" cy="1659.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="2555" y="1663.4707">~RenderSystem();</text><ellipse cx="2546" cy="1676.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="2555" y="1681.0801">RenderSystem(const RenderSystem &amp;) = delete;</text><ellipse cx="2546" cy="1694.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="381" x="2555" y="1698.6895">RenderSystem &amp;operator=(const RenderSystem &amp;) = delete;</text><ellipse cx="2546" cy="1712.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="946" x="2555" y="1716.2988">void RenderGameObjects(        VkCommandBuffer commandBuffer,        std::vector&lt;DivineGameObject&gt; &amp;gameObjects,        const Camera &amp;camera);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="2555" y="1733.9082">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2543" y="1744.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="2555" y="1751.5176">void CreatePipelineLayout();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2543" y="1761.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="2555" y="1769.127">void CreatePipeline(VkRenderPass renderPass);</text></g><!--class Camera--><g id="elem_Camera"><rect codeLine="1" fill="#F1F1F1" height="206.4844" id="Camera" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="622" x="3542" y="1552.5"/><ellipse cx="3823.75" cy="1568.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3826.5156,1564.375 Q3826.6719,1564.1563 3826.8594,1564.0469 Q3827.0469,1563.9375 3827.2656,1563.9375 Q3827.6406,1563.9375 3827.875,1564.2031 Q3828.1094,1564.4531 3828.1094,1565.0625 L3828.1094,1566.5156 Q3828.1094,1567.125 3827.875,1567.3906 Q3827.6406,1567.6563 3827.2656,1567.6563 Q3826.9219,1567.6563 3826.7188,1567.4531 Q3826.5156,1567.2656 3826.4063,1566.75 Q3826.3594,1566.3906 3826.1719,1566.2031 Q3825.8438,1565.8281 3825.2344,1565.6094 Q3824.625,1565.3906 3824,1565.3906 Q3823.2344,1565.3906 3822.5938,1565.7188 Q3821.9688,1566.0469 3821.4688,1566.7969 Q3820.9844,1567.5469 3820.9844,1568.5781 L3820.9844,1569.6719 Q3820.9844,1570.9063 3821.875,1571.7344 Q3822.7656,1572.5469 3824.3594,1572.5469 Q3825.2969,1572.5469 3825.9531,1572.2969 Q3826.3438,1572.1406 3826.7656,1571.7031 Q3827.0313,1571.4375 3827.1719,1571.3594 Q3827.3281,1571.2813 3827.5313,1571.2813 Q3827.8594,1571.2813 3828.1094,1571.5469 Q3828.375,1571.7969 3828.375,1572.1406 Q3828.375,1572.4844 3828.0313,1572.8906 Q3827.5313,1573.4688 3826.7344,1573.7969 Q3825.6563,1574.25 3824.3594,1574.25 Q3822.8438,1574.25 3821.6406,1573.625 Q3820.6563,1573.125 3819.9688,1572.0625 Q3819.2813,1570.9844 3819.2813,1569.7031 L3819.2813,1568.5469 Q3819.2813,1567.2188 3819.8906,1566.0781 Q3820.5156,1564.9219 3821.6094,1564.3125 Q3822.7031,1563.6875 3823.9375,1563.6875 Q3824.6719,1563.6875 3825.3125,1563.8594 Q3825.9688,1564.0156 3826.5156,1564.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="3844.25" y="1574.2285">Camera</text><line style="stroke:#181818;stroke-width:0.5;" x1="3543" x2="4163" y1="1584.5" y2="1584.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550" y="1595.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="3562" y="1603.0332">glm::mat4 m_ViewMatrix{1.0f};</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3550" y="1613.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="3562" y="1620.6426">glm::mat4 m_ProjectionMatrix{1.0f};</text><line style="stroke:#181818;stroke-width:0.5;" x1="3543" x2="4163" y1="1627.7188" y2="1627.7188"/><ellipse cx="3553" cy="1642.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="425" x="3562" y="1646.252">inline const glm::mat4 &amp;GetViewMat() const { return m_ViewMatrix; }</text><ellipse cx="3553" cy="1659.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="493" x="3562" y="1663.8613">inline const glm::mat4 &amp;GetProjectionMat() const { return m_ProjectionMatrix; }</text><ellipse cx="3553" cy="1677.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="593" x="3562" y="1681.4707">void SetOrthographicProjection(float left, float right, float top, float bottom, float near, float far);</text><ellipse cx="3553" cy="1694.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="456" x="3562" y="1699.0801">void SetPerspctiveProjection(float fovy, float aspect, float near, float far);</text><ellipse cx="3553" cy="1712.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="596" x="3562" y="1716.6895">void SetViewDirection(glm::vec3 position, glm::vec3 direction, glm::vec3 up = {0.0f, -1.0f, 0.0f});</text><ellipse cx="3553" cy="1730.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="565" x="3562" y="1734.2988">void SetViewTarget(glm::vec3 position, glm::vec3 target, glm::vec3 up = {0.0f, -1.0f, 0.0f});</text><ellipse cx="3553" cy="1747.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="352" x="3562" y="1751.9082">void SetViewYXZ(glm::vec3 position, glm::vec3 rotation);</text></g><!--class KeyMappings--><g id="elem_KeyMappings"><rect codeLine="1" fill="#F1F1F1" height="224.0938" id="KeyMappings" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="239" x="282.5" y="1986.5"/><ellipse cx="355.25" cy="2002.5" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M353.3594,2007.0625 Q353.1406,2007.3281 353,2007.4063 Q352.8594,2007.4844 352.6719,2007.4844 Q352.2813,2007.4844 352.0313,2007.2188 Q351.7969,2006.9531 351.7969,2006.3594 L351.7969,2005.2031 Q351.7969,2004.5938 352.0313,2004.3438 Q352.2813,2004.0781 352.6719,2004.0781 Q352.9688,2004.0781 353.1719,2004.2344 Q353.375,2004.3906 353.4844,2004.7656 Q353.5938,2005.125 353.7031,2005.2656 Q353.9531,2005.5156 354.5625,2005.7813 Q355.1719,2006.0469 355.9063,2006.0469 Q357.0469,2006.0469 357.7656,2005.5156 Q358.2344,2005.1875 358.2344,2004.7188 Q358.2344,2004.4063 358.0156,2004.125 Q357.7969,2003.8438 357.2813,2003.6719 Q356.9531,2003.5469 355.7969,2003.3281 Q354.4063,2003.0625 353.6875,2002.7031 Q352.9688,2002.3438 352.5469,2001.6875 Q352.1406,2001.0156 352.1406,2000.2344 Q352.1406,1999.0156 353.1563,1998.1094 Q354.1875,1997.1875 355.8281,1997.1875 Q356.4844,1997.1875 357.0313,1997.3281 Q357.5938,1997.4688 358.0625,1997.7656 Q358.3906,1997.4531 358.7188,1997.4531 Q359.0938,1997.4531 359.3281,1997.7188 Q359.5625,1997.9688 359.5625,1998.5781 L359.5625,1999.8594 Q359.5625,2000.4688 359.3281,2000.7344 Q359.0938,2000.9844 358.7188,2000.9844 Q358.4063,2000.9844 358.1719,2000.7969 Q357.9844,2000.6563 357.8906,2000.2344 Q357.8125,1999.8125 357.6719,1999.625 Q357.4219,1999.3125 356.9375,1999.1094 Q356.4688,1998.8906 355.8281,1998.8906 Q354.9063,1998.8906 354.375,1999.3125 Q353.8438,1999.7344 353.8438,2000.2031 Q353.8438,2000.5156 354.0625,2000.8125 Q354.2813,2001.1094 354.7031,2001.2813 Q354.9844,2001.3906 356.2813,2001.6563 Q357.5938,2001.9063 358.2969,2002.2188 Q359,2002.5156 359.4688,2003.1719 Q359.9375,2003.8281 359.9375,2004.7344 Q359.9375,2006 359.0469,2006.75 Q357.8594,2007.75 356.0313,2007.75 Q355.3281,2007.75 354.6563,2007.5781 Q354,2007.4063 353.3594,2007.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="375.75" y="2008.2285">KeyMappings</text><line style="stroke:#181818;stroke-width:0.5;" x1="283.5" x2="520.5" y1="2018.5" y2="2018.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="288.5" y="2037.0332">int moveLeft = GLFW_KEY_A;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="288.5" y="2054.6426">int moveRight = GLFW_KEY_D;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="288.5" y="2072.252">int moveForward = GLFW_KEY_W;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="288.5" y="2089.8613">int moveBackward = GLFW_KEY_S;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="288.5" y="2107.4707">int moveUp = GLFW_KEY_E;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="288.5" y="2125.0801">int moveDown = GLFW_KEY_Q;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="288.5" y="2142.6895">int lookLeft = GLFW_KEY_LEFT;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="288.5" y="2160.2988">int lookRight = GLFW_KEY_RIGHT;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="288.5" y="2177.9082">int lookUp = GLFW_KEY_UP;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="288.5" y="2195.5176">int lookDown = GLFW_KEY_DOWN;</text><line style="stroke:#181818;stroke-width:0.5;" x1="283.5" x2="520.5" y1="2202.5938" y2="2202.5938"/></g><!--class KeyboardController--><g id="elem_KeyboardController"><rect codeLine="15" fill="#F1F1F1" height="118.4375" id="KeyboardController" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="580" x="557" y="2039.5"/><ellipse cx="781.25" cy="2055.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M784.0156,2051.375 Q784.1719,2051.1563 784.3594,2051.0469 Q784.5469,2050.9375 784.7656,2050.9375 Q785.1406,2050.9375 785.375,2051.2031 Q785.6094,2051.4531 785.6094,2052.0625 L785.6094,2053.5156 Q785.6094,2054.125 785.375,2054.3906 Q785.1406,2054.6563 784.7656,2054.6563 Q784.4219,2054.6563 784.2188,2054.4531 Q784.0156,2054.2656 783.9063,2053.75 Q783.8594,2053.3906 783.6719,2053.2031 Q783.3438,2052.8281 782.7344,2052.6094 Q782.125,2052.3906 781.5,2052.3906 Q780.7344,2052.3906 780.0938,2052.7188 Q779.4688,2053.0469 778.9688,2053.7969 Q778.4844,2054.5469 778.4844,2055.5781 L778.4844,2056.6719 Q778.4844,2057.9063 779.375,2058.7344 Q780.2656,2059.5469 781.8594,2059.5469 Q782.7969,2059.5469 783.4531,2059.2969 Q783.8438,2059.1406 784.2656,2058.7031 Q784.5313,2058.4375 784.6719,2058.3594 Q784.8281,2058.2813 785.0313,2058.2813 Q785.3594,2058.2813 785.6094,2058.5469 Q785.875,2058.7969 785.875,2059.1406 Q785.875,2059.4844 785.5313,2059.8906 Q785.0313,2060.4688 784.2344,2060.7969 Q783.1563,2061.25 781.8594,2061.25 Q780.3438,2061.25 779.1406,2060.625 Q778.1563,2060.125 777.4688,2059.0625 Q776.7813,2057.9844 776.7813,2056.7031 L776.7813,2055.5469 Q776.7813,2054.2188 777.3906,2053.0781 Q778.0156,2051.9219 779.1094,2051.3125 Q780.2031,2050.6875 781.4375,2050.6875 Q782.1719,2050.6875 782.8125,2050.8594 Q783.4688,2051.0156 784.0156,2051.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="801.75" y="2061.2285">KeyboardController</text><line style="stroke:#181818;stroke-width:0.5;" x1="558" x2="1136" y1="2071.5" y2="2071.5"/><ellipse cx="568" cy="2085.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="577" y="2090.0332">KeyMappings m_Keys{};</text><ellipse cx="568" cy="2103.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="577" y="2107.6426">float m_MoveSpeed = 3.0f;</text><ellipse cx="568" cy="2121.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="577" y="2125.252">float m_TurnSpeed = 1.5f;</text><line style="stroke:#181818;stroke-width:0.5;" x1="558" x2="1136" y1="2132.3281" y2="2132.3281"/><ellipse cx="568" cy="2146.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="554" x="577" y="2150.8613">void MoveInPlaneXZ(GLFWwindow *window, float dt, DivineGameObject &amp;gameObjects);</text></g><!--class App--><g id="elem_App"><rect codeLine="1" fill="#F1F1F1" height="294.5313" id="App" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="395" x="1172.5" y="1951"/><ellipse cx="1353.25" cy="1967" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1356.0156,1962.875 Q1356.1719,1962.6563 1356.3594,1962.5469 Q1356.5469,1962.4375 1356.7656,1962.4375 Q1357.1406,1962.4375 1357.375,1962.7031 Q1357.6094,1962.9531 1357.6094,1963.5625 L1357.6094,1965.0156 Q1357.6094,1965.625 1357.375,1965.8906 Q1357.1406,1966.1563 1356.7656,1966.1563 Q1356.4219,1966.1563 1356.2188,1965.9531 Q1356.0156,1965.7656 1355.9063,1965.25 Q1355.8594,1964.8906 1355.6719,1964.7031 Q1355.3438,1964.3281 1354.7344,1964.1094 Q1354.125,1963.8906 1353.5,1963.8906 Q1352.7344,1963.8906 1352.0938,1964.2188 Q1351.4688,1964.5469 1350.9688,1965.2969 Q1350.4844,1966.0469 1350.4844,1967.0781 L1350.4844,1968.1719 Q1350.4844,1969.4063 1351.375,1970.2344 Q1352.2656,1971.0469 1353.8594,1971.0469 Q1354.7969,1971.0469 1355.4531,1970.7969 Q1355.8438,1970.6406 1356.2656,1970.2031 Q1356.5313,1969.9375 1356.6719,1969.8594 Q1356.8281,1969.7813 1357.0313,1969.7813 Q1357.3594,1969.7813 1357.6094,1970.0469 Q1357.875,1970.2969 1357.875,1970.6406 Q1357.875,1970.9844 1357.5313,1971.3906 Q1357.0313,1971.9688 1356.2344,1972.2969 Q1355.1563,1972.75 1353.8594,1972.75 Q1352.3438,1972.75 1351.1406,1972.125 Q1350.1563,1971.625 1349.4688,1970.5625 Q1348.7813,1969.4844 1348.7813,1968.2031 L1348.7813,1967.0469 Q1348.7813,1965.7188 1349.3906,1964.5781 Q1350.0156,1963.4219 1351.1094,1962.8125 Q1352.2031,1962.1875 1353.4375,1962.1875 Q1354.1719,1962.1875 1354.8125,1962.3594 Q1355.4688,1962.5156 1356.0156,1962.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="25" x="1373.75" y="1972.7285">App</text><line style="stroke:#181818;stroke-width:0.5;" x1="1173.5" x2="1566.5" y1="1983" y2="1983"/><ellipse cx="1183.5" cy="1997.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="1192.5" y="2001.5332">const int m_Width = 800;</text><ellipse cx="1183.5" cy="2014.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="1192.5" y="2019.1426">const int m_Height = 600;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="1192.5" y="2036.752">&#160;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="1192.5" y="2054.3613">&#160;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1180.5" y="2064.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="369" x="1192.5" y="2071.9707">Window m_Window{m_Width, m_Height, "Vulkan Warper"};</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1180.5" y="2082.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="1192.5" y="2089.5801">Device m_Device{m_Window};</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1180.5" y="2099.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="1192.5" y="2107.1895">Renderer m_Renderer{m_Window, m_Device};</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1180.5" y="2117.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="1192.5" y="2124.7988">std::vector&lt;DivineGameObject&gt; m_GameObjects;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1173.5" x2="1566.5" y1="2131.875" y2="2131.875"/><ellipse cx="1183.5" cy="2146.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="1192.5" y="2150.4082">App();</text><ellipse cx="1183.5" cy="2163.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="1192.5" y="2168.0176">~App();</text><ellipse cx="1183.5" cy="2181.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="1192.5" y="2185.627">App(const App &amp;) = delete;</text><ellipse cx="1183.5" cy="2199.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="1192.5" y="2203.2363">App &amp;operator=(const App &amp;) = delete;</text><ellipse cx="1183.5" cy="2216.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="1192.5" y="2220.8457">void run();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1180.5" y="2231.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="1192.5" y="2238.4551">void LoadGameObjects();</text></g><!--SRC=[RSn13i8m30J0Ew-W7-1BaMklm934bfDIzVVqmi68uywkTj7ETHDST-rY-ysto_8bmLiPYSPEpW_IdjJLKRNdQJD1JNAdXcBh4poJ1xeW47-mZ6DCjDJmUHEKw8LZDGefR7s6rVfpHkvd_W00]--></g></svg>