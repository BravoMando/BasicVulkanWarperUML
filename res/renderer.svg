<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="597px" preserveAspectRatio="none" style="width:689px;height:597px;background:#FFFFFF;" version="1.1" viewBox="0 0 689 597" width="689px" zoomAndPan="magnify"><defs/><g><!--class Renderer--><g id="elem_Renderer"><rect codeLine="1" fill="#F1F1F1" height="576.2813" id="Renderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="668" x="7" y="7"/><ellipse cx="306.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M309.5156,18.875 Q309.6719,18.6563 309.8594,18.5469 Q310.0469,18.4375 310.2656,18.4375 Q310.6406,18.4375 310.875,18.7031 Q311.1094,18.9531 311.1094,19.5625 L311.1094,21.0156 Q311.1094,21.625 310.875,21.8906 Q310.6406,22.1563 310.2656,22.1563 Q309.9219,22.1563 309.7188,21.9531 Q309.5156,21.7656 309.4063,21.25 Q309.3594,20.8906 309.1719,20.7031 Q308.8438,20.3281 308.2344,20.1094 Q307.625,19.8906 307,19.8906 Q306.2344,19.8906 305.5938,20.2188 Q304.9688,20.5469 304.4688,21.2969 Q303.9844,22.0469 303.9844,23.0781 L303.9844,24.1719 Q303.9844,25.4063 304.875,26.2344 Q305.7656,27.0469 307.3594,27.0469 Q308.2969,27.0469 308.9531,26.7969 Q309.3438,26.6406 309.7656,26.2031 Q310.0313,25.9375 310.1719,25.8594 Q310.3281,25.7813 310.5313,25.7813 Q310.8594,25.7813 311.1094,26.0469 Q311.375,26.2969 311.375,26.6406 Q311.375,26.9844 311.0313,27.3906 Q310.5313,27.9688 309.7344,28.2969 Q308.6563,28.75 307.3594,28.75 Q305.8438,28.75 304.6406,28.125 Q303.6563,27.625 302.9688,26.5625 Q302.2813,25.4844 302.2813,24.2031 L302.2813,23.0469 Q302.2813,21.7188 302.8906,20.5781 Q303.5156,19.4219 304.6094,18.8125 Q305.7031,18.1875 306.9375,18.1875 Q307.6719,18.1875 308.3125,18.3594 Q308.9688,18.5156 309.5156,18.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="327.25" y="28.7285">Renderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="674" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="50.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="27" y="57.5332">Window &amp;r_Window;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="67.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="27" y="75.1426">Device &amp;r_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="85.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="285" x="27" y="92.752">std::unique_ptr&lt;SwapChain&gt; up_SwapChain;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="103.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="27" y="110.3613">std::vector&lt;VkCommandBuffer&gt; m_CommandBuffers;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="120.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="27" y="127.9707">uint32_t m_CurrentImageIndex;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="138.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="27" y="145.5801">int m_CurrentFrameIndex = 0;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="155.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="27" y="163.1895">bool m_IsFrameStart = false;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="674" y1="170.2656" y2="170.2656"/><ellipse cx="18" cy="184.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="286" x="27" y="188.7988">Renderer(Window &amp;window, Device &amp;device);</text><ellipse cx="18" cy="202.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="27" y="206.4082">~Renderer();</text><ellipse cx="18" cy="219.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="27" y="224.0176">Renderer(const Renderer &amp;) = delete;</text><ellipse cx="18" cy="237.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="27" y="241.627">Renderer &amp;operator=(const Renderer &amp;) = delete;</text><ellipse cx="18" cy="255.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="403" x="27" y="259.2363">inline bool IsFrameInProgress() const { return m_IsFrameStart; }</text><ellipse cx="18" cy="299.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380" x="27" y="276.8457">inline VkCommandBuffer GetCurrentCommandBuffer() const</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="31" y="294.4551">{assert(m_IsFrameStart &amp;&amp;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="358" x="31" y="312.0645">"Can't get command buffer when frame not in progress");</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="328" x="31" y="329.6738">return m_CommandBuffers[m_CurrentFrameIndex];}</text><ellipse cx="18" cy="369.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="27" y="347.2832">inline int GetFrameIndex() const</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="31" y="364.8926">{assert(m_IsFrameStart &amp;&amp;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="329" x="31" y="382.502">"Can't get frame index when frame not in progress");</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="31" y="400.1113">return m_CurrentFrameIndex;}</text><ellipse cx="18" cy="413.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="642" x="27" y="417.7207">inline VkRenderPass GetSwapChainRenderPass() const { return up_SwapChain-&gt;GetRenderPass(); }</text><ellipse cx="18" cy="431.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="539" x="27" y="435.3301">inline float GetAspectRatio() const { return up_SwapChain-&gt;GetExtentAspectRatio(); }</text><ellipse cx="18" cy="448.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="27" y="452.9395">VkCommandBuffer BeginFrame();</text><ellipse cx="18" cy="466.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="27" y="470.5488">void EndFrame();</text><ellipse cx="18" cy="483.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="450" x="27" y="488.1582">void BeginSwapChainRenderPass(VkCommandBuffer commandBuffer);</text><ellipse cx="18" cy="501.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="439" x="27" y="505.7676">void EndSwapChainRenderPass(VkCommandBuffer commandBuffer);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="523.377">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="533.7578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="27" y="540.9863">void RecreateSwapChain();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="551.3672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="27" y="558.5957">void CreateCommandBuffers();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="568.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="27" y="576.2051">void FreeCommandBuffers();</text></g><!--SRC=[dLHDJzmm4BtpAqOSqbq1KjNU2BiI1AZsXXQfFPGgCl5aiKZiT3pPHLhHtrxdoo797e1S78_VUtxZ6Jl9XBMmHYsHa8xsH-2-4n-O_L9QcXq4kteyXMlSgWGXaFKu3rlymp_Fy34VIOosxASGp6414ZDa74CXC0MIO4EBTx2KpfH6U3GcWvMz9P7ZIj-HsH1QEvj3ex07GYv9Gnwte7iMn26y3cL-FaScpuMMLsMQkWr_84Sb4MeUn3lT1mrxTtH8F1iAGn2ujUD8w2yC6sG7h-dmsEZkdb13Mi516tQxGz5QFfw7ZkdT3hQrlrsWiTCcAl7bJpZAGMckVFU8ZxjjdAcA_06hOsVXv72RGjvLtUOStkz44Jq9fVlmj61b4NlSsTAnte8dzKip8-hiBss12Qy5A_CEpPiNTiu7d5vwt1DNk56wph9lywrH4cwqF1IkyOTo7GidRsSJwSyer19dZSGQ4qB1w7Kwc-rwLAyE-sq4kIKy06WHtID1SVFNCRl7WkBchujRbkVdfLP_IumBfWllQpcepm2-TVKnT35AUpcv9nsfT7VX-xUO- -vSvMBJTcUBgQxBWUPr3ytN3b8_BgChiu1KPDPby_eV]--></g></svg>