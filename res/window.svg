<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="368px" preserveAspectRatio="none" style="width:811px;height:368px;background:#FFFFFF;" version="1.1" viewBox="0 0 811 368" width="811px" zoomAndPan="magnify"><defs/><g><!--class Window--><g id="elem_Window"><rect codeLine="1" fill="#F1F1F1" height="347.3594" id="Window" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="790" x="7" y="7"/><ellipse cx="373.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M376.0156,18.875 Q376.1719,18.6563 376.3594,18.5469 Q376.5469,18.4375 376.7656,18.4375 Q377.1406,18.4375 377.375,18.7031 Q377.6094,18.9531 377.6094,19.5625 L377.6094,21.0156 Q377.6094,21.625 377.375,21.8906 Q377.1406,22.1563 376.7656,22.1563 Q376.4219,22.1563 376.2188,21.9531 Q376.0156,21.7656 375.9063,21.25 Q375.8594,20.8906 375.6719,20.7031 Q375.3438,20.3281 374.7344,20.1094 Q374.125,19.8906 373.5,19.8906 Q372.7344,19.8906 372.0938,20.2188 Q371.4688,20.5469 370.9688,21.2969 Q370.4844,22.0469 370.4844,23.0781 L370.4844,24.1719 Q370.4844,25.4063 371.375,26.2344 Q372.2656,27.0469 373.8594,27.0469 Q374.7969,27.0469 375.4531,26.7969 Q375.8438,26.6406 376.2656,26.2031 Q376.5313,25.9375 376.6719,25.8594 Q376.8281,25.7813 377.0313,25.7813 Q377.3594,25.7813 377.6094,26.0469 Q377.875,26.2969 377.875,26.6406 Q377.875,26.9844 377.5313,27.3906 Q377.0313,27.9688 376.2344,28.2969 Q375.1563,28.75 373.8594,28.75 Q372.3438,28.75 371.1406,28.125 Q370.1563,27.625 369.4688,26.5625 Q368.7813,25.4844 368.7813,24.2031 L368.7813,23.0469 Q368.7813,21.7188 369.3906,20.5781 Q370.0156,19.4219 371.1094,18.8125 Q372.2031,18.1875 373.4375,18.1875 Q374.1719,18.1875 374.8125,18.3594 Q375.4688,18.5156 376.0156,18.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="393.75" y="28.7285">Window</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="796" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="50.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="27" y="57.5332">int m_Width, m_Height;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="67.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="27" y="75.1426">std::string m_Name;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="85.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="27" y="92.752">GLFWwindow *m_WindowHandle;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="103.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="27" y="110.3613">bool m_FrameBufferResizeFlag = false;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="796" y1="117.4375" y2="117.4375"/><ellipse cx="18" cy="131.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="27" y="135.9707">Window(int w, int h, const std::string &amp;name);</text><ellipse cx="18" cy="149.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="27" y="153.5801">~Window();</text><ellipse cx="18" cy="166.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="27" y="171.1895">Window(const Window &amp;) = delete;</text><ellipse cx="18" cy="184.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="27" y="188.7988">Window &amp;operator=(const Window &amp;) = delete;</text><ellipse cx="18" cy="202.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="476" x="27" y="206.4082">inline GLFWwindow *GetWindowHandle() const { return m_WindowHandle; }</text><ellipse cx="18" cy="219.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="539" x="27" y="224.0176">inline bool ShouldClose() const { return glfwWindowShouldClose(m_WindowHandle); }</text><ellipse cx="18" cy="237.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="712" x="27" y="241.627">inline VkExtent2D GetExtent() const { return {static_cast&lt;uint32_t&gt;(m_Width), static_cast&lt;uint32_t&gt;(m_Height)}; }</text><ellipse cx="18" cy="255.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="501" x="27" y="259.2363">inline bool WasFrameBufferResizd() const { return m_FrameBufferResizeFlag; }</text><ellipse cx="18" cy="272.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="503" x="27" y="276.8457">inline void ResetFrameBufferResizeFlag() { m_FrameBufferResizeFlag = false; }</text><ellipse cx="18" cy="290.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="764" x="27" y="294.4551">VkResult CreateWindowSurface(VkInstance instance, const VkAllocationCallbacks *pAllocator, VkSurfaceKHR *pSurface);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="312.0645">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="322.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="27" y="329.6738">void InitWindow();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="340.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="484" x="27" y="347.2832">void FrameBufferResizeCallback(GLFWwindow *window, int width, int height);</text></g><!--SRC=[XLFBRi8m4Bpp5Nj2X8OBlK5RgQNbeLOzK0akbP19DeaLOoDxqrH5zDjhi5E5byZ5MS_ihBspZWGp1kPSngfiR1fWlniVjhWaA4FOBLa8aPA6m53SwndINARGb6o5GTydVVxwjFyT7xj45q0pW7k8KI3X8GsQQesQaTBtLpEu55mYZDw6yzAHsYCannyp6Gji1Vwy6z18XPQmMjJnFcmFjPPA2VZ8L27YWL3cZ40gaj99r6c7ii69xYn_-IQKr7q6UqJtVwgzCSI8Huk86RehRCDlkmjws8l7b0KXNCB7oDECWktv-yoP6MhhqLEH9AYdQFXFVAupnoGS2fQUI7uf7eF5aSxohV3cafPrC672rDe-oorQ28A1HaRe6rleX4NOckKJUq8c8xIrtKyrVxFyKGWLsMueEM12B5cK6sYl_QxIeQLudTVnr28-i5EvBzrnzvX8JeVpsgbSs3h6oKMgSgtwtBdLFP9oPvP_BywNIdctvSqCeNAj0kjFQhLujrKhf5xeQ7uzOs_pjQOtjdy0]--></g></svg>