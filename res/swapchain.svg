<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="967px" preserveAspectRatio="none" style="width:749px;height:967px;background:#FFFFFF;" version="1.1" viewBox="0 0 749 967" width="749px" zoomAndPan="magnify"><defs/><g><!--class SwapChain--><g id="elem_SwapChain"><rect codeLine="1" fill="#F1F1F1" height="946.0781" id="SwapChain" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="728" x="7" y="7"/><ellipse cx="331.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M334.0156,18.875 Q334.1719,18.6563 334.3594,18.5469 Q334.5469,18.4375 334.7656,18.4375 Q335.1406,18.4375 335.375,18.7031 Q335.6094,18.9531 335.6094,19.5625 L335.6094,21.0156 Q335.6094,21.625 335.375,21.8906 Q335.1406,22.1563 334.7656,22.1563 Q334.4219,22.1563 334.2188,21.9531 Q334.0156,21.7656 333.9063,21.25 Q333.8594,20.8906 333.6719,20.7031 Q333.3438,20.3281 332.7344,20.1094 Q332.125,19.8906 331.5,19.8906 Q330.7344,19.8906 330.0938,20.2188 Q329.4688,20.5469 328.9688,21.2969 Q328.4844,22.0469 328.4844,23.0781 L328.4844,24.1719 Q328.4844,25.4063 329.375,26.2344 Q330.2656,27.0469 331.8594,27.0469 Q332.7969,27.0469 333.4531,26.7969 Q333.8438,26.6406 334.2656,26.2031 Q334.5313,25.9375 334.6719,25.8594 Q334.8281,25.7813 335.0313,25.7813 Q335.3594,25.7813 335.6094,26.0469 Q335.875,26.2969 335.875,26.6406 Q335.875,26.9844 335.5313,27.3906 Q335.0313,27.9688 334.2344,28.2969 Q333.1563,28.75 331.8594,28.75 Q330.3438,28.75 329.1406,28.125 Q328.1563,27.625 327.4688,26.5625 Q326.7813,25.4844 326.7813,24.2031 L326.7813,23.0469 Q326.7813,21.7188 327.3906,20.5781 Q328.0156,19.4219 329.1094,18.8125 Q330.2031,18.1875 331.4375,18.1875 Q332.1719,18.1875 332.8125,18.3594 Q333.4688,18.5156 334.0156,18.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="351.75" y="28.7285">SwapChain</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="734" y1="39" y2="39"/><ellipse cx="18" cy="53.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="293" x="27" y="57.5332">const unsigned int MAX_FRAMES_IN_FLIGHT;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="75.1426">&#160;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="92.752">&#160;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="103.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="27" y="110.3613">Device &amp;r_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="120.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="27" y="127.9707">VkExtent2D m_WindowExtent;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="138.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="307" x="27" y="145.5801">std::shared_ptr&lt;SwapChain&gt; sp_OldSwapChain;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="155.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="27" y="163.1895">VkSwapchainKHR m_SwapChain;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="173.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="27" y="180.7988">std::vector&lt;VkImage&gt; m_SwapChainImages;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="191.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="242" x="27" y="198.4082">VkFormat m_SwapChainImageFormat;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="208.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="242" x="27" y="216.0176">VkFormat m_SwapChainDepthFormat;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="226.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="27" y="233.627">VkExtent2D m_SwapChainImageExtent;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="244.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="27" y="251.2363">std::vector&lt;VkImageView&gt; m_SwapChainImageViews;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="261.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="27" y="268.8457">VkRenderPass m_RenderPass;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="279.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="27" y="286.4551">std::vector&lt;VkImage&gt; m_DepthImages;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="296.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="355" x="27" y="304.0645">std::vector&lt;VkDeviceMemory&gt; m_DepthImageMemories;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="314.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="27" y="321.6738">std::vector&lt;VkImageView&gt; m_DepthImageViews;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="332.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="360" x="27" y="339.2832">std::vector&lt;VkFramebuffer&gt; m_SwapChainFrameBuffers;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="349.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="373" x="27" y="356.8926">std::vector&lt;VkSemaphore&gt; m_ImageAvailableSemaphores;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="367.2734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="27" y="374.502">std::vector&lt;VkSemaphore&gt; m_RenderFinishedSemaphores;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="384.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="27" y="392.1113">std::vector&lt;VkFence&gt; m_InFlightFences;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="402.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="27" y="409.7207">std::vector&lt;VkFence&gt; m_ImagesInFlight;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="420.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="27" y="427.3301">size_t m_CurrentFrame = 0;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="734" y1="434.4063" y2="434.4063"/><ellipse cx="18" cy="448.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="27" y="452.9395">SwapChain(Device &amp;device, VkExtent2D windowExtent);</text><ellipse cx="18" cy="466.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="600" x="27" y="470.5488">SwapChain(Device &amp;device, VkExtent2D windowExtent, std::shared_ptr&lt;SwapChain&gt; previous);</text><ellipse cx="18" cy="483.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="27" y="488.1582">~SwapChain();</text><ellipse cx="18" cy="501.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="27" y="505.7676">SwapChain(const SwapChain &amp;) = delete;</text><ellipse cx="18" cy="519.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="27" y="523.377">SwapChain &amp;operator=(const SwapChain &amp;) = delete;</text><ellipse cx="18" cy="536.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="453" x="27" y="540.9863">inline VkSwapchainKHR GetSwapChain() const { return m_SwapChain; }</text><ellipse cx="18" cy="554.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="536" x="27" y="558.5957">inline size_t GetSwapChainImageCount() const { return m_SwapChainImages.size(); }</text><ellipse cx="18" cy="571.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="568" x="27" y="576.2051">inline VkFormat GetSwapChainImageFormat() const { return m_SwapChainImageFormat; }</text><ellipse cx="18" cy="589.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="568" x="27" y="593.8145">inline VkExtent2D GetSwapChainImageExtent() const { return m_SwapChainImageExtent; }</text><ellipse cx="18" cy="607.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="470" x="27" y="611.4238">inline uint32_t GetWidth() const { return m_SwapChainImageExtent.width; }</text><ellipse cx="18" cy="624.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="481" x="27" y="629.0332">inline uint32_t GetHeight() const { return m_SwapChainImageExtent.height; }</text><ellipse cx="18" cy="642.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="679" x="27" y="646.6426">inline VkImageView GetSwapChainImageView(size_t index) const { return m_SwapChainImageViews[index]; }</text><ellipse cx="18" cy="660.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="27" y="664.252">inline VkRenderPass GetRenderPass() const { return m_RenderPass; }</text><ellipse cx="18" cy="677.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="27" y="681.8613">inline float GetExtentAspectRatio() const;</text><ellipse cx="18" cy="695.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="643" x="27" y="699.4707">inline VkFramebuffer GetFrameBuffer(size_t index) const { return m_SwapChainFrameBuffers[index]; }</text><ellipse cx="18" cy="712.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="455" x="27" y="717.0801">inline bool CompareSwapFormats(const SwapChain &amp;swapChain) const;</text><ellipse cx="18" cy="730.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="27" y="734.6895">VkFormat FindDepthFormat();</text><ellipse cx="18" cy="748.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="326" x="27" y="752.2988">VkResult AcquireNextImage(uint32_t *pImageIndex);</text><ellipse cx="18" cy="765.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="591" x="27" y="769.9082">VkResult SubmitCommandBuffers(const VkCommandBuffer *pBuffers, uint32_t *pImageIndex);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="780.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="27" y="787.5176">void Init();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="797.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="27" y="805.127">void CreateSwapChain();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="815.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="490" x="27" y="822.7363">VkExtent2D ChooseSwapChainExtent(VkSurfaceCapabilitiesKHR capabilities);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="833.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="688" x="27" y="840.3457">VkSurfaceFormatKHR ChooseSwapChainSurfaceFormat(const std::vector&lt;VkSurfaceFormatKHR&gt; &amp;formats);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="850.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="702" x="27" y="857.9551">VkPresentModeKHR CHooseSwapChainPresentMode(const std::vector&lt;VkPresentModeKHR&gt; &amp;presentModes);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="868.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="27" y="875.5645">void CreateImageViews();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="885.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="27" y="893.1738">void CreateRenderPass();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="903.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="27" y="910.7832">void CreateDepthResources();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="921.1641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="27" y="928.3926">void CreateFrameBuffers();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="938.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="27" y="946.002">void CreateSyncObjects();</text></g><!--SRC=[dLPRJzim57xlh_1J1HkWYRrHgDG5GgkjWDgfJDgco4rEYKTYPxRJmX3xxNFiD768Uz7wqjhdEz-v-5mQ9bW8D5tXp8inePsN3bAVz_NDmIKiIGYe6-dl8pHxl7gIGENf9LeH6h6LEHxs_bVp20aPdPs967E8WapoyugYZpAkb5akAleVVsi33fiXeqBMPzGzH1SeWWGajC2eopBWM39-iOyUeGcXeA8eK661-ZoSe6kGbaF8yBmW3ZBd5AL19UoXroQH87yWa0s2KOeVm6CvbLkfD4oS50Gg1szvPuy-uobsC9lxtTG6vo2ktgz5RIIxgGskHPqJAZ-UccpSaqZ6-pATh0hqLhuXa8TuRzTEOWrt1Az1CmAhTlJ5xK7vdggouMcdiK93VDVOdmvR4r0IVbVqfZ9MdrnHrD8MqI9XfWvCR0EHGIWdM1As9ceLjyzn2lDyiG1UAEhZ9ttSEq1BPsE8SyOIvB4qKqrVA9gI4-q-5EkVRnokgjnN5YuXa_6wkcl414IUI3G8V-U4mmqyIPtxWwewtcNwOgGZQkbDytbAf78onJGguoaTd3qshXLHAJz2sybVX5Jf3r_BzELKa0SAaKgBHEF1jy2V3CPNqs1q4_XVHjV3hxsELZn6IqOYDAAa2h2yyZXW2QsPU6ntgnSp9cfCsQjgaELyWKFmS8Rd926IW2X6McYTBReIRT9SuDxGDkHbdlHaNwgYO_oypT17tOLvTylC7GUXt1kp2BIHOSE89NMQQ6eh0rbz8LoPgxlHcLYxzHnYNNYgN5ZEGt13x6vmlzqp3M_dlrG4Mbu2rikJ1-QNurdJuDvQesl0bcKgik0sYUgDL3-jlT7idMLpLZdMAUkt5rBDLxRcXhso1MOriZDWvpBPx6JnhdttxAtfhLdR6ARROzUUDkDk8ispZI5b_BcfeEy8Y3qShvKQJZSrh97TtpI7tPfJI74MCwuZqcO6IqmIF4-W4ksZQhAc9Z4HCKIxL7sWeR58_QHOjlfY9rZdUgrIWSrEIWClvrmLWuvP_NNxqEky_WC0]--></g></svg>