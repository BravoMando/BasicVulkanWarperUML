<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="967px" preserveAspectRatio="none" style="width:1530px;height:967px;background:#FFFFFF;" version="1.1" viewBox="0 0 1530 967" width="1530px" zoomAndPan="magnify"><defs/><g><!--class SwapChain--><g id="elem_SwapChain"><rect codeLine="1" fill="#F1F1F1" height="946.0781" id="SwapChain" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1509" x="7" y="7"/><ellipse cx="721.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M724.5156,18.875 Q724.6719,18.6563 724.8594,18.5469 Q725.0469,18.4375 725.2656,18.4375 Q725.6406,18.4375 725.875,18.7031 Q726.1094,18.9531 726.1094,19.5625 L726.1094,21.0156 Q726.1094,21.625 725.875,21.8906 Q725.6406,22.1563 725.2656,22.1563 Q724.9219,22.1563 724.7188,21.9531 Q724.5156,21.7656 724.4063,21.25 Q724.3594,20.8906 724.1719,20.7031 Q723.8438,20.3281 723.2344,20.1094 Q722.625,19.8906 722,19.8906 Q721.2344,19.8906 720.5938,20.2188 Q719.9688,20.5469 719.4688,21.2969 Q718.9844,22.0469 718.9844,23.0781 L718.9844,24.1719 Q718.9844,25.4063 719.875,26.2344 Q720.7656,27.0469 722.3594,27.0469 Q723.2969,27.0469 723.9531,26.7969 Q724.3438,26.6406 724.7656,26.2031 Q725.0313,25.9375 725.1719,25.8594 Q725.3281,25.7813 725.5313,25.7813 Q725.8594,25.7813 726.1094,26.0469 Q726.375,26.2969 726.375,26.6406 Q726.375,26.9844 726.0313,27.3906 Q725.5313,27.9688 724.7344,28.2969 Q723.6563,28.75 722.3594,28.75 Q720.8438,28.75 719.6406,28.125 Q718.6563,27.625 717.9688,26.5625 Q717.2813,25.4844 717.2813,24.2031 L717.2813,23.0469 Q717.2813,21.7188 717.8906,20.5781 Q718.5156,19.4219 719.6094,18.8125 Q720.7031,18.1875 721.9375,18.1875 Q722.6719,18.1875 723.3125,18.3594 Q723.9688,18.5156 724.5156,18.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="742.25" y="28.7285">SwapChain</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="1515" y1="39" y2="39"/><ellipse cx="18" cy="53.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="293" x="27" y="57.5332">const unsigned int MAX_FRAMES_IN_FLIGHT;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="75.1426">&#160;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="92.752">&#160;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="103.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="27" y="110.3613">Device &amp;r_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="120.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="27" y="127.9707">VkExtent2D m_WindowExtent;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="138.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="307" x="27" y="145.5801">std::shared_ptr&lt;SwapChain&gt; sp_OldSwapChain;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="155.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="27" y="163.1895">VkSwapchainKHR m_SwapChain;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="173.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="27" y="180.7988">std::vector&lt;VkImage&gt; m_SwapChainImages;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="191.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="242" x="27" y="198.4082">VkFormat m_SwapChainImageFormat;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="208.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="242" x="27" y="216.0176">VkFormat m_SwapChainDepthFormat;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="226.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="27" y="233.627">VkExtent2D m_SwapChainImageExtent;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="244.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="27" y="251.2363">std::vector&lt;VkImageView&gt; m_SwapChainImageViews;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="261.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="27" y="268.8457">VkRenderPass m_RenderPass;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="279.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="27" y="286.4551">std::vector&lt;VkImage&gt; m_DepthImages;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="296.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="355" x="27" y="304.0645">std::vector&lt;VkDeviceMemory&gt; m_DepthImageMemories;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="314.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="27" y="321.6738">std::vector&lt;VkImageView&gt; m_DepthImageViews;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="332.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="360" x="27" y="339.2832">std::vector&lt;VkFramebuffer&gt; m_SwapChainFrameBuffers;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="349.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="373" x="27" y="356.8926">std::vector&lt;VkSemaphore&gt; m_ImageAvailableSemaphores;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="367.2734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="27" y="374.502">std::vector&lt;VkSemaphore&gt; m_RenderFinishedSemaphores;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="384.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="27" y="392.1113">std::vector&lt;VkFence&gt; m_InFlightFences;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="402.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="27" y="409.7207">std::vector&lt;VkFence&gt; m_ImagesInFlight;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="420.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="27" y="427.3301">size_t m_CurrentFrame = 0;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="1515" y1="434.4063" y2="434.4063"/><ellipse cx="18" cy="448.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="27" y="452.9395">SwapChain(Device &amp;device, VkExtent2D windowExtent);</text><ellipse cx="18" cy="466.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="600" x="27" y="470.5488">SwapChain(Device &amp;device, VkExtent2D windowExtent, std::shared_ptr&lt;SwapChain&gt; previous);</text><ellipse cx="18" cy="483.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="27" y="488.1582">~SwapChain();</text><ellipse cx="18" cy="501.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="27" y="505.7676">SwapChain(const SwapChain &amp;) = delete;</text><ellipse cx="18" cy="519.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="27" y="523.377">SwapChain &amp;operator=(const SwapChain &amp;) = delete;</text><ellipse cx="18" cy="536.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="453" x="27" y="540.9863">inline VkSwapchainKHR GetSwapChain() const { return m_SwapChain; }</text><ellipse cx="18" cy="554.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="536" x="27" y="558.5957">inline size_t GetSwapChainImageCount() const { return m_SwapChainImages.size(); }</text><ellipse cx="18" cy="571.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="568" x="27" y="576.2051">inline VkFormat GetSwapChainImageFormat() const { return m_SwapChainImageFormat; }</text><ellipse cx="18" cy="589.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="568" x="27" y="593.8145">inline VkExtent2D GetSwapChainImageExtent() const { return m_SwapChainImageExtent; }</text><ellipse cx="18" cy="607.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="470" x="27" y="611.4238">inline uint32_t GetWidth() const { return m_SwapChainImageExtent.width; }</text><ellipse cx="18" cy="624.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="481" x="27" y="629.0332">inline uint32_t GetHeight() const { return m_SwapChainImageExtent.height; }</text><ellipse cx="18" cy="642.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="679" x="27" y="646.6426">inline VkImageView GetSwapChainImageView(size_t index) const { return m_SwapChainImageViews[index]; }</text><ellipse cx="18" cy="660.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="27" y="664.252">inline VkRenderPass GetRenderPass() const { return m_RenderPass; }</text><ellipse cx="18" cy="677.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="987" x="27" y="681.8613">inline float GetExtentAspectRatio() const { return static_cast&lt;float&gt;(m_SwapChainImageExtent.width) / static_cast&lt;float&gt;(m_SwapChainImageExtent.height); }</text><ellipse cx="18" cy="695.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="643" x="27" y="699.4707">inline VkFramebuffer GetFrameBuffer(size_t index) const { return m_SwapChainFrameBuffers[index]; }</text><ellipse cx="18" cy="712.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1483" x="27" y="717.0801">inline bool CompareSwapFormats(const SwapChain &amp;swapChain) const    {        return swapChain.m_SwapChainDepthFormat == m_SwapChainDepthFormat &amp;&amp; swapChain.m_SwapChainImageFormat == m_SwapChainImageFormat;    }</text><ellipse cx="18" cy="730.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="27" y="734.6895">VkFormat FindDepthFormat();</text><ellipse cx="18" cy="748.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="326" x="27" y="752.2988">VkResult AcquireNextImage(uint32_t *pImageIndex);</text><ellipse cx="18" cy="765.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="591" x="27" y="769.9082">VkResult SubmitCommandBuffers(const VkCommandBuffer *pBuffers, uint32_t *pImageIndex);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="780.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="27" y="787.5176">void Init();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="797.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="27" y="805.127">void CreateSwapChain();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="815.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="490" x="27" y="822.7363">VkExtent2D ChooseSwapChainExtent(VkSurfaceCapabilitiesKHR capabilities);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="833.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="688" x="27" y="840.3457">VkSurfaceFormatKHR ChooseSwapChainSurfaceFormat(const std::vector&lt;VkSurfaceFormatKHR&gt; &amp;formats);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="850.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="702" x="27" y="857.9551">VkPresentModeKHR CHooseSwapChainPresentMode(const std::vector&lt;VkPresentModeKHR&gt; &amp;presentModes);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="868.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="27" y="875.5645">void CreateImageViews();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="885.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="27" y="893.1738">void CreateRenderPass();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="903.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="27" y="910.7832">void CreateDepthResources();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="921.1641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="27" y="928.3926">void CreateFrameBuffers();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="938.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="27" y="946.002">void CreateSyncObjects();</text></g><!--SRC=[dLPjRzem4FxEh_0dHBUMJTstKf0OBGLjVH5CTD8sHIOv6g-9dTaEj4FTRvzZXyHfpCkMB-2xvvxpdUzyzYCi19gkS388CQ6DTGEfxsqfQLt0alY0ce7-FKQpnyid2LIUNg0LeG5RcULHvtyjZv6GmTcP2367m4iaFoyeUYZXofYbeg3__gTquF3fCofakKRD8zH50KGWeGP6JPO0nvBnxY5sX4Q4WeeYG_aPwjDeWgv0MXj2XcUDECYKKnHxXRA3Ngf4Wlm6JrO8nZ5-W05BgTn9fM6YdH6e7BpcdJqE6O-nWzd8zrCRd8EuEByQjT7ifpQu6dLAgFnmQh9nJm8P7ihKNcNedNmZ80_XmLjhXnhk25w3PWHMzUWpQIi_JrNPyBJNMMOXlcdi3uUl2IWDlyjwKpahLwueIcsDQ14nKmScjhv8m9SJB0ch4mcfvBxdOo7FjLsljIlbH-ZTFvYOf3fhbUCOvkbY0JpRg5v-rCk34shPR4tfdB483LYSg4icCpGbBkfzBpP_DnxLjqRvjqdL1jEsTd41YGpppkjsqHPDi-csjlhkbNMb8zMt2Qneyw4AsN9HtefP6OaqagZl_qe9XnjuafgjLRJ7cqGBnZh5DRjfEe-9L5cBCGto1ESPcprMn8eern-ZtUHhKpGlUNPJAiW3XK2TaqJN_Q_USDA_lfnwunjl-7byDVhIQMZ34xHa941ZIee0Sz600vPG6medzdKr21aJ9IQ_hDHDdl85zc604pmd4P44H7Qd-zRQeilH9iqPxXLjHP_dIO-sfUewni_h33tKN9X2jDpSSH1gUzSi0EraL75YQPqkgjRAGL8AX2jpvNNaJAnzzpZKkl1KkR2K- -26sEtfFhjdwj_EVwe8j3u7R5uFt3F_7CSQU_VMEs83sF6Q48bt6mNbI2wFrXxfzj2sEOiSwvJrwXEvvCjRSqiRxu1PZUmCs3bDjsyoEzUUU_YKzDQmgKoJtR7hdLRZhYBDiLr3pFXprK3B28W3DbuQLJPTjR1cI6_RO71RJY76ISYuZaYxwIynYV0yWa9rYAd9chg9YGWXs6Sw1EeRZtGOPODH2_Q2TQut9WNO3CdO6wISgsBGCQktw_jEu-Kl]--></g></svg>