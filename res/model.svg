<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="680px" preserveAspectRatio="none" style="width:953px;height:680px;background:#FFFFFF;" version="1.1" viewBox="0 0 953 680" width="953px" zoomAndPan="magnify"><defs/><g><!--class [nested]Vertex--><g id="elem_[nested]Vertex"><rect codeLine="1" fill="#F1F1F1" height="188.875" id="[nested]Vertex" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="514" x="50" y="7"/><ellipse cx="257.25" cy="23" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M255.3594,27.5625 Q255.1406,27.8281 255,27.9063 Q254.8594,27.9844 254.6719,27.9844 Q254.2813,27.9844 254.0313,27.7188 Q253.7969,27.4531 253.7969,26.8594 L253.7969,25.7031 Q253.7969,25.0938 254.0313,24.8438 Q254.2813,24.5781 254.6719,24.5781 Q254.9688,24.5781 255.1719,24.7344 Q255.375,24.8906 255.4844,25.2656 Q255.5938,25.625 255.7031,25.7656 Q255.9531,26.0156 256.5625,26.2813 Q257.1719,26.5469 257.9063,26.5469 Q259.0469,26.5469 259.7656,26.0156 Q260.2344,25.6875 260.2344,25.2188 Q260.2344,24.9063 260.0156,24.625 Q259.7969,24.3438 259.2813,24.1719 Q258.9531,24.0469 257.7969,23.8281 Q256.4063,23.5625 255.6875,23.2031 Q254.9688,22.8438 254.5469,22.1875 Q254.1406,21.5156 254.1406,20.7344 Q254.1406,19.5156 255.1563,18.6094 Q256.1875,17.6875 257.8281,17.6875 Q258.4844,17.6875 259.0313,17.8281 Q259.5938,17.9688 260.0625,18.2656 Q260.3906,17.9531 260.7188,17.9531 Q261.0938,17.9531 261.3281,18.2188 Q261.5625,18.4688 261.5625,19.0781 L261.5625,20.3594 Q261.5625,20.9688 261.3281,21.2344 Q261.0938,21.4844 260.7188,21.4844 Q260.4063,21.4844 260.1719,21.2969 Q259.9844,21.1563 259.8906,20.7344 Q259.8125,20.3125 259.6719,20.125 Q259.4219,19.8125 258.9375,19.6094 Q258.4688,19.3906 257.8281,19.3906 Q256.9063,19.3906 256.375,19.8125 Q255.8438,20.2344 255.8438,20.7031 Q255.8438,21.0156 256.0625,21.3125 Q256.2813,21.6094 256.7031,21.7813 Q256.9844,21.8906 258.2813,22.1563 Q259.5938,22.4063 260.2969,22.7188 Q261,23.0156 261.4688,23.6719 Q261.9375,24.3281 261.9375,25.2344 Q261.9375,26.5 261.0469,27.25 Q259.8594,28.25 258.0313,28.25 Q257.3281,28.25 256.6563,28.0781 Q256,27.9063 255.3594,27.5625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="277.75" y="28.7285">[nested]Vertex</text><line style="stroke:#181818;stroke-width:0.5;" x1="51" x2="563" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="56" y="57.5332">glm::vec3 position{};</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="56" y="75.1426">glm::vec3 color{};</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="56" y="92.752">glm::vec3 normal{};</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="56" y="110.3613">glm::vec2 uv{};</text><line style="stroke:#181818;stroke-width:0.5;" x1="51" x2="563" y1="117.4375" y2="117.4375"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="490" x="56" y="135.9707">static std::vector&lt;VkVertexInputBindingDescription&gt; GetBindingDescriptions();</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="502" x="56" y="153.5801">static std::vector&lt;VkVertexInputAttributeDescription&gt; GetAttributeDescriptions();</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="56" y="171.1895">&#160;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="56" y="188.7988">inline bool operator==(const Vertex &amp;other) const;</text></g><!--class [nested]Builder--><g id="elem_[nested]Builder"><rect codeLine="14" fill="#F1F1F1" height="100.8281" id="[nested]Builder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="599.5" y="51"/><ellipse cx="721.25" cy="67" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M719.3594,71.5625 Q719.1406,71.8281 719,71.9063 Q718.8594,71.9844 718.6719,71.9844 Q718.2813,71.9844 718.0313,71.7188 Q717.7969,71.4531 717.7969,70.8594 L717.7969,69.7031 Q717.7969,69.0938 718.0313,68.8438 Q718.2813,68.5781 718.6719,68.5781 Q718.9688,68.5781 719.1719,68.7344 Q719.375,68.8906 719.4844,69.2656 Q719.5938,69.625 719.7031,69.7656 Q719.9531,70.0156 720.5625,70.2813 Q721.1719,70.5469 721.9063,70.5469 Q723.0469,70.5469 723.7656,70.0156 Q724.2344,69.6875 724.2344,69.2188 Q724.2344,68.9063 724.0156,68.625 Q723.7969,68.3438 723.2813,68.1719 Q722.9531,68.0469 721.7969,67.8281 Q720.4063,67.5625 719.6875,67.2031 Q718.9688,66.8438 718.5469,66.1875 Q718.1406,65.5156 718.1406,64.7344 Q718.1406,63.5156 719.1563,62.6094 Q720.1875,61.6875 721.8281,61.6875 Q722.4844,61.6875 723.0313,61.8281 Q723.5938,61.9688 724.0625,62.2656 Q724.3906,61.9531 724.7188,61.9531 Q725.0938,61.9531 725.3281,62.2188 Q725.5625,62.4688 725.5625,63.0781 L725.5625,64.3594 Q725.5625,64.9688 725.3281,65.2344 Q725.0938,65.4844 724.7188,65.4844 Q724.4063,65.4844 724.1719,65.2969 Q723.9844,65.1563 723.8906,64.7344 Q723.8125,64.3125 723.6719,64.125 Q723.4219,63.8125 722.9375,63.6094 Q722.4688,63.3906 721.8281,63.3906 Q720.9063,63.3906 720.375,63.8125 Q719.8438,64.2344 719.8438,64.7031 Q719.8438,65.0156 720.0625,65.3125 Q720.2813,65.6094 720.7031,65.7813 Q720.9844,65.8906 722.2813,66.1563 Q723.5938,66.4063 724.2969,66.7188 Q725,67.0156 725.4688,67.6719 Q725.9375,68.3281 725.9375,69.2344 Q725.9375,70.5 725.0469,71.25 Q723.8594,72.25 722.0313,72.25 Q721.3281,72.25 720.6563,72.0781 Q720,71.9063 719.3594,71.5625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="741.75" y="72.7285">[nested]Builder</text><line style="stroke:#181818;stroke-width:0.5;" x1="600.5" x2="945.5" y1="83" y2="83"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="605.5" y="101.5332">std::vector&lt;Vertex&gt; vertices{};</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="605.5" y="119.1426">std::vector&lt;uint32_t&gt; indices{};</text><line style="stroke:#181818;stroke-width:0.5;" x1="600.5" x2="945.5" y1="126.2188" y2="126.2188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="335" x="605.5" y="144.752">void LoadModelFromFile(const std::string &amp;FilePath);</text></g><!--class Model--><g id="elem_Model"><rect codeLine="23" fill="#F1F1F1" height="417.7969" id="Model" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="600" x="7" y="256"/><ellipse cx="283.75" cy="272" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M286.5156,267.875 Q286.6719,267.6563 286.8594,267.5469 Q287.0469,267.4375 287.2656,267.4375 Q287.6406,267.4375 287.875,267.7031 Q288.1094,267.9531 288.1094,268.5625 L288.1094,270.0156 Q288.1094,270.625 287.875,270.8906 Q287.6406,271.1563 287.2656,271.1563 Q286.9219,271.1563 286.7188,270.9531 Q286.5156,270.7656 286.4063,270.25 Q286.3594,269.8906 286.1719,269.7031 Q285.8438,269.3281 285.2344,269.1094 Q284.625,268.8906 284,268.8906 Q283.2344,268.8906 282.5938,269.2188 Q281.9688,269.5469 281.4688,270.2969 Q280.9844,271.0469 280.9844,272.0781 L280.9844,273.1719 Q280.9844,274.4063 281.875,275.2344 Q282.7656,276.0469 284.3594,276.0469 Q285.2969,276.0469 285.9531,275.7969 Q286.3438,275.6406 286.7656,275.2031 Q287.0313,274.9375 287.1719,274.8594 Q287.3281,274.7813 287.5313,274.7813 Q287.8594,274.7813 288.1094,275.0469 Q288.375,275.2969 288.375,275.6406 Q288.375,275.9844 288.0313,276.3906 Q287.5313,276.9688 286.7344,277.2969 Q285.6563,277.75 284.3594,277.75 Q282.8438,277.75 281.6406,277.125 Q280.6563,276.625 279.9688,275.5625 Q279.2813,274.4844 279.2813,273.2031 L279.2813,272.0469 Q279.2813,270.7188 279.8906,269.5781 Q280.5156,268.4219 281.6094,267.8125 Q282.7031,267.1875 283.9375,267.1875 Q284.6719,267.1875 285.3125,267.3594 Q285.9688,267.5156 286.5156,267.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="304.25" y="277.7285">Model</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="606" y1="288" y2="288"/><ellipse cx="18" cy="302.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="27" y="306.5332">[nested] struct Vertex;</text><ellipse cx="18" cy="319.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="27" y="324.1426">[nested] struct Builder;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="341.752">&#160;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="352.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="27" y="359.3613">Device &amp;r_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="369.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="27" y="376.9707">std::unique_ptr&lt;Buffer&gt; up_VertexBuffer{};</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="387.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="27" y="394.5801">uint32_t m_VertexCount;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="404.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="27" y="412.1895">bool m_HasIndexBuffer = false;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="422.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="27" y="429.7988">std::unique_ptr&lt;Buffer&gt; up_IndexBuffer{};</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="440.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="27" y="447.4082">uint32_t m_IndexCount;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="606" y1="454.4844" y2="454.4844"/><ellipse cx="18" cy="468.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="27" y="473.0176">Model(Device &amp;device, const Builder &amp;builder);</text><ellipse cx="18" cy="486.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="27" y="490.627">~Model();</text><ellipse cx="18" cy="504.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="27" y="508.2363">Model(const Model &amp;) = delete;</text><ellipse cx="18" cy="521.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="271" x="27" y="525.8457">Model &amp;operator=(const Model &amp;) = delete;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="543.4551">&#160;</text><ellipse cx="18" cy="556.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="27" y="561.0645">void Bind(VkCommandBuffer commandBuffer);</text><ellipse cx="18" cy="574.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="297" x="27" y="578.6738">void Draw(VkCommandBuffer commandBuffer);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="596.2832">&#160;</text><ellipse cx="18" cy="609.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="574" x="27" y="613.8926">std::unique_ptr&lt;Model&gt; CreateModelFromFile(Device &amp;device, const std::string &amp;FilePath);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="631.502">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="641.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394" x="27" y="649.1113">void CreateVertexBuffers(const std::vector&lt;Vertex&gt; &amp;vertices);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="659.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="393" x="27" y="666.7207">void CreateIndexBuffers(const std::vector&lt;uint32_t&gt; &amp;indices);</text></g><!--SRC=[ZLFBRjim4BphA_Oas4XpIMvnBA2saJP02_JaIri8jBXEY52aIYxL0eRxxQL8of5Kkuql9FSnEpDQMpAk8lYgq1BoxriqXB-oGmR-zoJhkxiMgrjej1Kaj3eS5vDCfQKsVuULDZMJq_WDkBQBXQ0bHgBo1myvqkP- -nBdFwh6qKeeBjJJ1crbHDDDB-03dWdRsNpn9iJtH4Ri7E4KyrmYe0POeQHG23kj9UW63VF0o-MiyZK44HvoJSzevX22Y-oOPNPixCe9oT4aPqSK0q81hJz5XROtRLZZXABRcv8AwDIdeb3LQi7XasRyi-Oe7uok7uJ4H2v0U2BUByYx-1T6pvqipw-Ip5e8NOdKLNpDDjZw4P3pSBwBcY09W7mNBydpA_ZsExQT0l4Pky8TyZaimL-GS5JaRUlzl5oV6eBGxkFFjYzhNTTCyPNRxpsZQlWwiGZr6yD-_hS-DHpY-XoZQqw97mxBXinzu5J0sY0Z7DjytggBjdU3hYEpY1Q_VMHYXnzjiXjvlnn9tWZaKV5_ORpkJfwMvrLplvsGjZNEMrp8fXKu2UdLcpBUUcvJ0oEt0bnJ3WNtYtuDFKMeKy5QEqLzDlpnwl8ZimEbVa7sJDgtp1nqdHqPycdYyGy0]--></g></svg>