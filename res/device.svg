<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1191px" preserveAspectRatio="none" style="width:1208px;height:1191px;background:#FFFFFF;" version="1.1" viewBox="0 0 1208 1191" width="1208px" zoomAndPan="magnify"><defs/><g><!--class SwapChainSupportDetails--><g id="elem_SwapChainSupportDetails"><rect codeLine="1" fill="#F1F1F1" height="100.8281" id="SwapChainSupportDetails" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="320" x="288.5" y="24.5"/><ellipse cx="362.25" cy="40.5" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M360.3594,45.0625 Q360.1406,45.3281 360,45.4063 Q359.8594,45.4844 359.6719,45.4844 Q359.2813,45.4844 359.0313,45.2188 Q358.7969,44.9531 358.7969,44.3594 L358.7969,43.2031 Q358.7969,42.5938 359.0313,42.3438 Q359.2813,42.0781 359.6719,42.0781 Q359.9688,42.0781 360.1719,42.2344 Q360.375,42.3906 360.4844,42.7656 Q360.5938,43.125 360.7031,43.2656 Q360.9531,43.5156 361.5625,43.7813 Q362.1719,44.0469 362.9063,44.0469 Q364.0469,44.0469 364.7656,43.5156 Q365.2344,43.1875 365.2344,42.7188 Q365.2344,42.4063 365.0156,42.125 Q364.7969,41.8438 364.2813,41.6719 Q363.9531,41.5469 362.7969,41.3281 Q361.4063,41.0625 360.6875,40.7031 Q359.9688,40.3438 359.5469,39.6875 Q359.1406,39.0156 359.1406,38.2344 Q359.1406,37.0156 360.1563,36.1094 Q361.1875,35.1875 362.8281,35.1875 Q363.4844,35.1875 364.0313,35.3281 Q364.5938,35.4688 365.0625,35.7656 Q365.3906,35.4531 365.7188,35.4531 Q366.0938,35.4531 366.3281,35.7188 Q366.5625,35.9688 366.5625,36.5781 L366.5625,37.8594 Q366.5625,38.4688 366.3281,38.7344 Q366.0938,38.9844 365.7188,38.9844 Q365.4063,38.9844 365.1719,38.7969 Q364.9844,38.6563 364.8906,38.2344 Q364.8125,37.8125 364.6719,37.625 Q364.4219,37.3125 363.9375,37.1094 Q363.4688,36.8906 362.8281,36.8906 Q361.9063,36.8906 361.375,37.3125 Q360.8438,37.7344 360.8438,38.2031 Q360.8438,38.5156 361.0625,38.8125 Q361.2813,39.1094 361.7031,39.2813 Q361.9844,39.3906 363.2813,39.6563 Q364.5938,39.9063 365.2969,40.2188 Q366,40.5156 366.4688,41.1719 Q366.9375,41.8281 366.9375,42.7344 Q366.9375,44 366.0469,44.75 Q364.8594,45.75 363.0313,45.75 Q362.3281,45.75 361.6563,45.5781 Q361,45.4063 360.3594,45.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="382.75" y="46.2285">SwapChainSupportDetails</text><line style="stroke:#181818;stroke-width:0.5;" x1="289.5" x2="607.5" y1="56.5" y2="56.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="294.5" y="75.0332">VkSurfaceCapabilitiesKHR capabilities;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="294.5" y="92.6426">std::vector&lt;VkSurfaceFormatKHR&gt; formats;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="294.5" y="110.252">std::vector&lt;VkPresentModeKHR&gt; presentModes;</text><line style="stroke:#181818;stroke-width:0.5;" x1="289.5" x2="607.5" y1="117.3281" y2="117.3281"/></g><!--class QueueFamilyIndices--><g id="elem_QueueFamilyIndices"><rect codeLine="8" fill="#F1F1F1" height="136.0469" id="QueueFamilyIndices" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="558" x="643.5" y="7"/><ellipse cx="854.25" cy="23" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M852.3594,27.5625 Q852.1406,27.8281 852,27.9063 Q851.8594,27.9844 851.6719,27.9844 Q851.2813,27.9844 851.0313,27.7188 Q850.7969,27.4531 850.7969,26.8594 L850.7969,25.7031 Q850.7969,25.0938 851.0313,24.8438 Q851.2813,24.5781 851.6719,24.5781 Q851.9688,24.5781 852.1719,24.7344 Q852.375,24.8906 852.4844,25.2656 Q852.5938,25.625 852.7031,25.7656 Q852.9531,26.0156 853.5625,26.2813 Q854.1719,26.5469 854.9063,26.5469 Q856.0469,26.5469 856.7656,26.0156 Q857.2344,25.6875 857.2344,25.2188 Q857.2344,24.9063 857.0156,24.625 Q856.7969,24.3438 856.2813,24.1719 Q855.9531,24.0469 854.7969,23.8281 Q853.4063,23.5625 852.6875,23.2031 Q851.9688,22.8438 851.5469,22.1875 Q851.1406,21.5156 851.1406,20.7344 Q851.1406,19.5156 852.1563,18.6094 Q853.1875,17.6875 854.8281,17.6875 Q855.4844,17.6875 856.0313,17.8281 Q856.5938,17.9688 857.0625,18.2656 Q857.3906,17.9531 857.7188,17.9531 Q858.0938,17.9531 858.3281,18.2188 Q858.5625,18.4688 858.5625,19.0781 L858.5625,20.3594 Q858.5625,20.9688 858.3281,21.2344 Q858.0938,21.4844 857.7188,21.4844 Q857.4063,21.4844 857.1719,21.2969 Q856.9844,21.1563 856.8906,20.7344 Q856.8125,20.3125 856.6719,20.125 Q856.4219,19.8125 855.9375,19.6094 Q855.4688,19.3906 854.8281,19.3906 Q853.9063,19.3906 853.375,19.8125 Q852.8438,20.2344 852.8438,20.7031 Q852.8438,21.0156 853.0625,21.3125 Q853.2813,21.6094 853.7031,21.7813 Q853.9844,21.8906 855.2813,22.1563 Q856.5938,22.4063 857.2969,22.7188 Q858,23.0156 858.4688,23.6719 Q858.9375,24.3281 858.9375,25.2344 Q858.9375,26.5 858.0469,27.25 Q856.8594,28.25 855.0313,28.25 Q854.3281,28.25 853.6563,28.0781 Q853,27.9063 852.3594,27.5625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="874.75" y="28.7285">QueueFamilyIndices</text><line style="stroke:#181818;stroke-width:0.5;" x1="644.5" x2="1200.5" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="649.5" y="57.5332">uint32_t graphicsFamily;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="649.5" y="75.1426">uint32_t presentFamily;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="649.5" y="92.752">bool graphicsFamilyHasValue = false;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="649.5" y="110.3613">bool presentFamilyHasValue = false;</text><line style="stroke:#181818;stroke-width:0.5;" x1="644.5" x2="1200.5" y1="117.4375" y2="117.4375"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="546" x="649.5" y="135.9707">inline bool IsComplete() { return graphicsFamilyHasValue &amp;&amp; presentFamilyHasValue; }</text></g><!--class Device--><g id="elem_Device"><rect codeLine="17" fill="#F1F1F1" height="981.2969" id="Device" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="883" x="7" y="203"/><ellipse cx="422.75" cy="219" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M425.5156,214.875 Q425.6719,214.6563 425.8594,214.5469 Q426.0469,214.4375 426.2656,214.4375 Q426.6406,214.4375 426.875,214.7031 Q427.1094,214.9531 427.1094,215.5625 L427.1094,217.0156 Q427.1094,217.625 426.875,217.8906 Q426.6406,218.1563 426.2656,218.1563 Q425.9219,218.1563 425.7188,217.9531 Q425.5156,217.7656 425.4063,217.25 Q425.3594,216.8906 425.1719,216.7031 Q424.8438,216.3281 424.2344,216.1094 Q423.625,215.8906 423,215.8906 Q422.2344,215.8906 421.5938,216.2188 Q420.9688,216.5469 420.4688,217.2969 Q419.9844,218.0469 419.9844,219.0781 L419.9844,220.1719 Q419.9844,221.4063 420.875,222.2344 Q421.7656,223.0469 423.3594,223.0469 Q424.2969,223.0469 424.9531,222.7969 Q425.3438,222.6406 425.7656,222.2031 Q426.0313,221.9375 426.1719,221.8594 Q426.3281,221.7813 426.5313,221.7813 Q426.8594,221.7813 427.1094,222.0469 Q427.375,222.2969 427.375,222.6406 Q427.375,222.9844 427.0313,223.3906 Q426.5313,223.9688 425.7344,224.2969 Q424.6563,224.75 423.3594,224.75 Q421.8438,224.75 420.6406,224.125 Q419.6563,223.625 418.9688,222.5625 Q418.2813,221.4844 418.2813,220.2031 L418.2813,219.0469 Q418.2813,217.7188 418.8906,216.5781 Q419.5156,215.4219 420.6094,214.8125 Q421.7031,214.1875 422.9375,214.1875 Q423.6719,214.1875 424.3125,214.3594 Q424.9688,214.5156 425.5156,214.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="443.25" y="224.7285">Device</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="889" y1="235" y2="235"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="246.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="27" y="253.5332">Window &amp;r_Window;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="263.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="27" y="271.1426">VkInstance m_Instance;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="281.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="27" y="288.752">VkDebugUtilsMessengerEXT m_DebugMessenger;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="299.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="27" y="306.3613">VkSurfaceKHR m_Surface;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="316.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="27" y="323.9707">VkPhysicalDevice m_PhysicalDevice = VK_NULL_HANDLE;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="334.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="27" y="341.5801">VkDevice m_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="351.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="27" y="359.1895">VkQueue m_GraphicsQueue;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="369.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="27" y="376.7988">VkQueue m_PresentQueue;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="387.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="27" y="394.4082">VkCommandPool m_CommandPool;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="412.0176">&#160;</text><ellipse cx="18" cy="425.3984" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="230" x="27" y="429.627">const bool s_EnableValidationLayer;</text><ellipse cx="18" cy="443.0078" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="27" y="447.2363">const std::vector&lt;const char *&gt; s_ValidationLayers;</text><ellipse cx="18" cy="460.6172" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="329" x="27" y="464.8457">const std::vector&lt;const char *&gt; s_DeviceExtensions;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="482.4551">&#160;</text><ellipse cx="18" cy="495.8359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="311" x="27" y="500.0645">VkPhysicalDeviceProperties m_DeviceProperties;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="889" y1="507.1406" y2="507.1406"/><ellipse cx="18" cy="521.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="27" y="525.6738">Device(Window &amp;window);</text><ellipse cx="18" cy="539.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="27" y="543.2832">~Device();</text><ellipse cx="18" cy="556.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="27" y="560.8926">Device(const Window &amp;) = delete;</text><ellipse cx="18" cy="574.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="281" x="27" y="578.502">Device &amp;operator=(const Device &amp;) = delete;</text><ellipse cx="18" cy="591.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="27" y="596.1113">inline VkInstance GetInstance() const { return m_Instance; }</text><ellipse cx="18" cy="609.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="390" x="27" y="613.7207">inline VkSurfaceKHR GetSurface() const { return m_Surface; }</text><ellipse cx="18" cy="627.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="344" x="27" y="631.3301">inline VkDevice GetDevice() const { return m_Device; }</text><ellipse cx="18" cy="644.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="458" x="27" y="648.9395">inline VkQueue GetGraphicsQueue() const { return m_GraphicsQueue; }</text><ellipse cx="18" cy="662.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="442" x="27" y="666.5488">inline VkQueue GetPresentQueue() const { return m_PresentQueue; }</text><ellipse cx="18" cy="679.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="491" x="27" y="684.1582">inline VkCommandPool GetCommandPool() const { return m_CommandPool; }</text><ellipse cx="18" cy="697.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="716" x="27" y="701.7676">inline QueueFamilyIndices GetQueueFamilyIndices() const { return FindQueueFamilyIndices(m_PhysicalDevice); }</text><ellipse cx="18" cy="715.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="835" x="27" y="719.377">inline SwapChainSupportDetails GetSwapChainSupportDetails() const { return QuerySwapChainSupportDetails(m_PhysicalDevice); }</text><ellipse cx="18" cy="732.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="413" x="27" y="736.9863">void CreateBuffer(VkDeviceSize size, VkBufferUsageFlags usage,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="561" x="27" y="754.5957">VkMemoryPropertyFlags properties, VkBuffer &amp;buffer, VkDeviceMemory &amp;bufferMemory);</text><ellipse cx="18" cy="767.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557" x="27" y="772.2051">uint32_t FindMemoryTypeIndex(uint32_t typeFliter, VkMemoryPropertyFlags properties);</text><ellipse cx="18" cy="785.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="27" y="789.8145">VkCommandBuffer BeginSingleTimeCommands();</text><ellipse cx="18" cy="803.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="431" x="27" y="807.4238">void EndSingleTimeCommands(VkCommandBuffer commandBuffer);</text><ellipse cx="18" cy="820.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="474" x="27" y="825.0332">void CopyBuffer(VkBuffer srcBuffer, VkBuffer dstBuffer, VkDeviceSize size);</text><ellipse cx="18" cy="838.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="698" x="27" y="842.6426">void CopyBufferToImage(VkBuffer buffer, VkImage image, uint32_t width, uint32_t height, uint32_t layerCount);</text><ellipse cx="18" cy="856.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="403" x="27" y="860.252">void CreateImageWithInfo(const VkImageCreateInfo &amp;imageInfo,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="563" x="27" y="877.8613">VkMemoryPropertyFlags properties, VkImage &amp;image, VkDeviceMemory &amp;imageMemory);</text><ellipse cx="18" cy="891.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="820" x="27" y="895.4707">VkFormat FindSupportedFormat(const std::vector&lt;VkFormat&gt; &amp;candidates, VkImageTiling tiling, VkFormatFeatureFlags features);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="913.0801">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="923.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="27" y="930.6895">void CreateInstance();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="941.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="27" y="948.2988">bool CheckValidationLayerSupport();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="958.6797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="324" x="27" y="965.9082">std::vector&lt;const char *&gt; GetRequiredExtensions();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="976.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="626" x="27" y="983.5176">void PopulateDebugUtilsMessengerCreateInfo(VkDebugUtilsMessengerCreateInfoEXT &amp;debugInfo);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="993.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="27" y="1001.127">void SetUpDebugMessenger();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1011.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="27" y="1018.7363">void CreateSurface();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1029.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="27" y="1036.3457">void PickPhysicalDevice();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1046.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="305" x="27" y="1053.9551">bool IsDeviceSuitable(VkPhysicalDevice device);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1064.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="534" x="27" y="1071.5645">QueueFamilyIndices FindQueueFamilyIndices(const VkPhysicalDevice device) const;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1081.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="395" x="27" y="1089.1738">bool CheckDeviceExtensionSupport(VkPhysicalDevice device);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1099.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="617" x="27" y="1106.7832">SwapChainSupportDetails QuerySwapChainSupportDetails(const VkPhysicalDevice device) const;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1117.1641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="27" y="1124.3926">void CreateLogicalDevice();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1134.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="27" y="1142.002">void CreateCommandPool();</text><ellipse cx="18" cy="1155.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="724" x="27" y="1159.6113">VKAPI_ATTR VkBool32 VKAPI_CALL DebugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="857" x="27" y="1177.2207">VkDebugUtilsMessageTypeFlagsEXT messageType, const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData, void *pUserData);</text></g><!--SRC=[dLTBRziu4BxxL_1an5dtqjxgRO3urHXn2c_yw1uA6BGqbWdBafQaadg3x6_VuKCKzR0NNHyaSHuVXyEFCxIGF0yaMRxIR7IWB5dcMPPoEGP9MImwRns2lyrncVCz3M14CxfZCPCCnEF3CmcyyK2R2Xb-_lm2WKpvxyvjcl8JbUXmH_RwizLumK508f_I4BHfLexH_htJ4IRMFtB8OKfFB3xFaf05K8IPiqH- -hYL9E8qEx106AD1LMbXVTqkJUEQqmCL6nhdGBwGFOq5U8OLW7OxbiGi0MC-4wFqbCKWuQP7tWW7cVFaqcpTRZlyWBoh30Gn5OACuGLNRHVzcntUV6T9cBwIxgj-zmPM- -CVgtSIEmxIH4XIUFLm0I6eAAjcf9jcm2dkq1VhKSYR7dRLc-CCxMY2Hbz15j-uUEFlKd3Q5ZgrkXg4POuY6OBOKHk6LRL0s43HlSX0qzjeMfmroPJlLxjHMj06KJ6uXcJvVH78rxVW88jED0aNYbE8vWtRm3nr0wjvW1HWKzh4dI9RMkmmziDPi8369f-znfGNwelUstPLStASc9ylMLy9uILb8Hbne1A6-NuF_ARWnfBz3KJWeu_vDRgre15COne9aglFlWOfVflZ4vnIVbvmTIhasHXcPeGriCGXtPr-znqHZMSXDoDt9brrKXaskjKv0qmm_BnnIecYALPR0tiz50Vjc6C36qA4sMD95CEAdS0gHLaVTBucITXYKySA_54LO9HcPvTkQovuC7HPiR9Go64jKsvRBY6kqja9zwO4BdEj5OIfPx_CwYiBvS4R7u151-a9Ode6FahpHDRcrBJHeD-PFCoIVMhBe9tA6g2STFMiwlFNIMF2xjguwvJHuXfZDaVJLJLZx660qCXiYDNsQbHtf1lWZh4GeovdNc4FJo8YzQlliAUujfpRux0t0qKi7SA7IePSbHzOfUvzemC4HsnWQZgM9dELPHjhQUc7QG8F3fIJspjL7PxXhvnn22S_9IG2CKJfgETVf5aUOmHZsENH6bSWda1W7OrmFztUw1D_HJ_vSqMweR9Ge-e4Iv3hJ7ixnre81iVrg6fuB3XMArCjHJDXIPypINUn8dNL7fkiAMZMgwLwNoZB1L7RyKnvRMwNiNBvBhRhlyAwLE6lLkrVYT1BzJoDslBfMLIweoDiSTdXM_DLE7et5kzIufGjr564KRS7dnMbWtTvAIyeJbjRRBrpuRLgyxZzjfxFjm_ttyRpYH-8zR3N5gSmTupwNQIXhjmmdDQ_M5Gl3XrRQzum8v85xxOZQww8xIHHVAsTxa6xo-KpBhOr1F4_86gSRK9i7kyNi-tzQlMiEW_6_-cZbOtkvtEYDt94utX7WsEZM621NC8BS6Pgzv19eVU_gZ95tyteYdy3QwMxE9PK3qJ9-gGu3csroWOtff8glzlCb_GDzs-pjG2k13stTtM-BLpVSJmgHVWtwry0]--></g></svg>