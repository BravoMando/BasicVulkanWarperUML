<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1103px" preserveAspectRatio="none" style="width:1741px;height:1103px;background:#FFFFFF;" version="1.1" viewBox="0 0 1741 1103" width="1741px" zoomAndPan="magnify"><defs/><g><!--class SwapChainSupportDetails--><g id="elem_SwapChainSupportDetails"><rect codeLine="1" fill="#F1F1F1" height="100.8281" id="SwapChainSupportDetails" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="320" x="710.5" y="24.5"/><ellipse cx="784.25" cy="40.5" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M782.3594,45.0625 Q782.1406,45.3281 782,45.4063 Q781.8594,45.4844 781.6719,45.4844 Q781.2813,45.4844 781.0313,45.2188 Q780.7969,44.9531 780.7969,44.3594 L780.7969,43.2031 Q780.7969,42.5938 781.0313,42.3438 Q781.2813,42.0781 781.6719,42.0781 Q781.9688,42.0781 782.1719,42.2344 Q782.375,42.3906 782.4844,42.7656 Q782.5938,43.125 782.7031,43.2656 Q782.9531,43.5156 783.5625,43.7813 Q784.1719,44.0469 784.9063,44.0469 Q786.0469,44.0469 786.7656,43.5156 Q787.2344,43.1875 787.2344,42.7188 Q787.2344,42.4063 787.0156,42.125 Q786.7969,41.8438 786.2813,41.6719 Q785.9531,41.5469 784.7969,41.3281 Q783.4063,41.0625 782.6875,40.7031 Q781.9688,40.3438 781.5469,39.6875 Q781.1406,39.0156 781.1406,38.2344 Q781.1406,37.0156 782.1563,36.1094 Q783.1875,35.1875 784.8281,35.1875 Q785.4844,35.1875 786.0313,35.3281 Q786.5938,35.4688 787.0625,35.7656 Q787.3906,35.4531 787.7188,35.4531 Q788.0938,35.4531 788.3281,35.7188 Q788.5625,35.9688 788.5625,36.5781 L788.5625,37.8594 Q788.5625,38.4688 788.3281,38.7344 Q788.0938,38.9844 787.7188,38.9844 Q787.4063,38.9844 787.1719,38.7969 Q786.9844,38.6563 786.8906,38.2344 Q786.8125,37.8125 786.6719,37.625 Q786.4219,37.3125 785.9375,37.1094 Q785.4688,36.8906 784.8281,36.8906 Q783.9063,36.8906 783.375,37.3125 Q782.8438,37.7344 782.8438,38.2031 Q782.8438,38.5156 783.0625,38.8125 Q783.2813,39.1094 783.7031,39.2813 Q783.9844,39.3906 785.2813,39.6563 Q786.5938,39.9063 787.2969,40.2188 Q788,40.5156 788.4688,41.1719 Q788.9375,41.8281 788.9375,42.7344 Q788.9375,44 788.0469,44.75 Q786.8594,45.75 785.0313,45.75 Q784.3281,45.75 783.6563,45.5781 Q783,45.4063 782.3594,45.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="804.75" y="46.2285">SwapChainSupportDetails</text><line style="stroke:#181818;stroke-width:0.5;" x1="711.5" x2="1029.5" y1="56.5" y2="56.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="716.5" y="75.0332">VkSurfaceCapabilitiesKHR capabilities;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="716.5" y="92.6426">std::vector&lt;VkSurfaceFormatKHR&gt; formats;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="716.5" y="110.252">std::vector&lt;VkPresentModeKHR&gt; presentModes;</text><line style="stroke:#181818;stroke-width:0.5;" x1="711.5" x2="1029.5" y1="117.3281" y2="117.3281"/></g><!--class QueueFamilyIndices--><g id="elem_QueueFamilyIndices"><rect codeLine="8" fill="#F1F1F1" height="136.0469" id="QueueFamilyIndices" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="558" x="1065.5" y="7"/><ellipse cx="1276.25" cy="23" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1274.3594,27.5625 Q1274.1406,27.8281 1274,27.9063 Q1273.8594,27.9844 1273.6719,27.9844 Q1273.2813,27.9844 1273.0313,27.7188 Q1272.7969,27.4531 1272.7969,26.8594 L1272.7969,25.7031 Q1272.7969,25.0938 1273.0313,24.8438 Q1273.2813,24.5781 1273.6719,24.5781 Q1273.9688,24.5781 1274.1719,24.7344 Q1274.375,24.8906 1274.4844,25.2656 Q1274.5938,25.625 1274.7031,25.7656 Q1274.9531,26.0156 1275.5625,26.2813 Q1276.1719,26.5469 1276.9063,26.5469 Q1278.0469,26.5469 1278.7656,26.0156 Q1279.2344,25.6875 1279.2344,25.2188 Q1279.2344,24.9063 1279.0156,24.625 Q1278.7969,24.3438 1278.2813,24.1719 Q1277.9531,24.0469 1276.7969,23.8281 Q1275.4063,23.5625 1274.6875,23.2031 Q1273.9688,22.8438 1273.5469,22.1875 Q1273.1406,21.5156 1273.1406,20.7344 Q1273.1406,19.5156 1274.1563,18.6094 Q1275.1875,17.6875 1276.8281,17.6875 Q1277.4844,17.6875 1278.0313,17.8281 Q1278.5938,17.9688 1279.0625,18.2656 Q1279.3906,17.9531 1279.7188,17.9531 Q1280.0938,17.9531 1280.3281,18.2188 Q1280.5625,18.4688 1280.5625,19.0781 L1280.5625,20.3594 Q1280.5625,20.9688 1280.3281,21.2344 Q1280.0938,21.4844 1279.7188,21.4844 Q1279.4063,21.4844 1279.1719,21.2969 Q1278.9844,21.1563 1278.8906,20.7344 Q1278.8125,20.3125 1278.6719,20.125 Q1278.4219,19.8125 1277.9375,19.6094 Q1277.4688,19.3906 1276.8281,19.3906 Q1275.9063,19.3906 1275.375,19.8125 Q1274.8438,20.2344 1274.8438,20.7031 Q1274.8438,21.0156 1275.0625,21.3125 Q1275.2813,21.6094 1275.7031,21.7813 Q1275.9844,21.8906 1277.2813,22.1563 Q1278.5938,22.4063 1279.2969,22.7188 Q1280,23.0156 1280.4688,23.6719 Q1280.9375,24.3281 1280.9375,25.2344 Q1280.9375,26.5 1280.0469,27.25 Q1278.8594,28.25 1277.0313,28.25 Q1276.3281,28.25 1275.6563,28.0781 Q1275,27.9063 1274.3594,27.5625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="1296.75" y="28.7285">QueueFamilyIndices</text><line style="stroke:#181818;stroke-width:0.5;" x1="1066.5" x2="1622.5" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="1071.5" y="57.5332">uint32_t graphicsFamily;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="1071.5" y="75.1426">uint32_t presentFamily;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="1071.5" y="92.752">bool graphicsFamilyHasValue = false;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="1071.5" y="110.3613">bool presentFamilyHasValue = false;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1066.5" x2="1622.5" y1="117.4375" y2="117.4375"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="546" x="1071.5" y="135.9707">inline bool IsComplete() { return graphicsFamilyHasValue &amp;&amp; presentFamilyHasValue; }</text></g><!--class Device--><g id="elem_Device"><rect codeLine="17" fill="#F1F1F1" height="893.25" id="Device" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1727" x="7" y="203"/><ellipse cx="844.75" cy="219" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M847.5156,214.875 Q847.6719,214.6563 847.8594,214.5469 Q848.0469,214.4375 848.2656,214.4375 Q848.6406,214.4375 848.875,214.7031 Q849.1094,214.9531 849.1094,215.5625 L849.1094,217.0156 Q849.1094,217.625 848.875,217.8906 Q848.6406,218.1563 848.2656,218.1563 Q847.9219,218.1563 847.7188,217.9531 Q847.5156,217.7656 847.4063,217.25 Q847.3594,216.8906 847.1719,216.7031 Q846.8438,216.3281 846.2344,216.1094 Q845.625,215.8906 845,215.8906 Q844.2344,215.8906 843.5938,216.2188 Q842.9688,216.5469 842.4688,217.2969 Q841.9844,218.0469 841.9844,219.0781 L841.9844,220.1719 Q841.9844,221.4063 842.875,222.2344 Q843.7656,223.0469 845.3594,223.0469 Q846.2969,223.0469 846.9531,222.7969 Q847.3438,222.6406 847.7656,222.2031 Q848.0313,221.9375 848.1719,221.8594 Q848.3281,221.7813 848.5313,221.7813 Q848.8594,221.7813 849.1094,222.0469 Q849.375,222.2969 849.375,222.6406 Q849.375,222.9844 849.0313,223.3906 Q848.5313,223.9688 847.7344,224.2969 Q846.6563,224.75 845.3594,224.75 Q843.8438,224.75 842.6406,224.125 Q841.6563,223.625 840.9688,222.5625 Q840.2813,221.4844 840.2813,220.2031 L840.2813,219.0469 Q840.2813,217.7188 840.8906,216.5781 Q841.5156,215.4219 842.6094,214.8125 Q843.7031,214.1875 844.9375,214.1875 Q845.6719,214.1875 846.3125,214.3594 Q846.9688,214.5156 847.5156,214.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="865.25" y="224.7285">Device</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="1733" y1="235" y2="235"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="246.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="27" y="253.5332">Window &amp;r_Window;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="263.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="27" y="271.1426">VkInstance m_Instance;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="281.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="27" y="288.752">VkDebugUtilsMessengerEXT m_DebugMessenger;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="299.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="27" y="306.3613">VkSurfaceKHR m_Surface;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="316.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="27" y="323.9707">VkPhysicalDevice m_PhysicalDevice = VK_NULL_HANDLE;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="334.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="27" y="341.5801">VkDevice m_Device;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="351.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="27" y="359.1895">VkQueue m_GraphicsQueue;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="369.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="27" y="376.7988">VkQueue m_PresentQueue;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="387.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="27" y="394.4082">VkCommandPool m_CommandPool;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="412.0176">&#160;</text><ellipse cx="18" cy="425.3984" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="230" x="27" y="429.627">const bool s_EnableValidationLayer;</text><ellipse cx="18" cy="443.0078" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="27" y="447.2363">const std::vector&lt;const char *&gt; s_ValidationLayers;</text><ellipse cx="18" cy="460.6172" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="329" x="27" y="464.8457">const std::vector&lt;const char *&gt; s_DeviceExtensions;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="1733" y1="471.9219" y2="471.9219"/><ellipse cx="18" cy="486.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="27" y="490.4551">Device(Window &amp;window);</text><ellipse cx="18" cy="503.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="27" y="508.0645">~Device();</text><ellipse cx="18" cy="521.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="27" y="525.6738">Device(const Window &amp;) = delete;</text><ellipse cx="18" cy="539.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="281" x="27" y="543.2832">Device &amp;operator=(const Device &amp;) = delete;</text><ellipse cx="18" cy="556.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="27" y="560.8926">inline VkInstance GetInstance() const { return m_Instance; }</text><ellipse cx="18" cy="574.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="390" x="27" y="578.502">inline VkSurfaceKHR GetSurface() const { return m_Surface; }</text><ellipse cx="18" cy="591.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="344" x="27" y="596.1113">inline VkDevice GetDevice() const { return m_Device; }</text><ellipse cx="18" cy="609.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="458" x="27" y="613.7207">inline VkQueue GetGraphicsQueue() const { return m_GraphicsQueue; }</text><ellipse cx="18" cy="627.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="442" x="27" y="631.3301">inline VkQueue GetPresentQueue() const { return m_PresentQueue; }</text><ellipse cx="18" cy="644.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="491" x="27" y="648.9395">inline VkCommandPool GetCommandPool() const { return m_CommandPool; }</text><ellipse cx="18" cy="662.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="716" x="27" y="666.5488">inline QueueFamilyIndices GetQueueFamilyIndices() const { return FindQueueFamilyIndices(m_PhysicalDevice); }</text><ellipse cx="18" cy="679.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="835" x="27" y="684.1582">inline SwapChainSupportDetails GetSwapChainSupportDetails() const { return QuerySwapChainSupportDetails(m_PhysicalDevice); }</text><ellipse cx="18" cy="697.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1122" x="27" y="701.7676">void CreateBuffer(        VkDeviceSize size,        VkBufferUsageFlags usage,        VkMemoryPropertyFlags properties,        VkBuffer &amp;buffer,        VkDeviceMemory &amp;bufferMemory);</text><ellipse cx="18" cy="715.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557" x="27" y="719.377">uint32_t FindMemoryTypeIndex(uint32_t typeFliter, VkMemoryPropertyFlags properties);</text><ellipse cx="18" cy="732.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="27" y="736.9863">VkCommandBuffer BeginSingleTimeCommands();</text><ellipse cx="18" cy="750.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="431" x="27" y="754.5957">void EndSingleTimeCommands(VkCommandBuffer commandBuffer);</text><ellipse cx="18" cy="767.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="474" x="27" y="772.2051">void CopyBuffer(VkBuffer srcBuffer, VkBuffer dstBuffer, VkDeviceSize size);</text><ellipse cx="18" cy="785.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="698" x="27" y="789.8145">void CopyBufferToImage(VkBuffer buffer, VkImage image, uint32_t width, uint32_t height, uint32_t layerCount);</text><ellipse cx="18" cy="803.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1086" x="27" y="807.4238">void CreateImageWithInfo(        const VkImageCreateInfo &amp;imageInfo,        VkMemoryPropertyFlags properties,        VkImage &amp;image,        VkDeviceMemory &amp;imageMemory);</text><ellipse cx="18" cy="820.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="820" x="27" y="825.0332">VkFormat FindSupportedFormat(const std::vector&lt;VkFormat&gt; &amp;candidates, VkImageTiling tiling, VkFormatFeatureFlags features);</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="27" y="842.6426">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="853.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="27" y="860.252">void CreateInstance();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="870.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="27" y="877.8613">bool CheckValidationLayerSupport();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="888.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="324" x="27" y="895.4707">std::vector&lt;const char *&gt; GetRequiredExtensions();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="905.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="626" x="27" y="913.0801">void PopulateDebugUtilsMessengerCreateInfo(VkDebugUtilsMessengerCreateInfoEXT &amp;debugInfo);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="923.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="27" y="930.6895">void SetUpDebugMessenger();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="941.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="27" y="948.2988">void CreateSurface();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="958.6797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="27" y="965.9082">void PickPhysicalDevice();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="976.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="305" x="27" y="983.5176">bool IsDeviceSuitable(VkPhysicalDevice device);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="993.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="534" x="27" y="1001.127">QueueFamilyIndices FindQueueFamilyIndices(const VkPhysicalDevice device) const;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1011.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="395" x="27" y="1018.7363">bool CheckDeviceExtensionSupport(VkPhysicalDevice device);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1029.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="617" x="27" y="1036.3457">SwapChainSupportDetails QuerySwapChainSupportDetails(const VkPhysicalDevice device) const;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1046.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="27" y="1053.9551">void CreateLogicalDevice();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1064.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="27" y="1071.5645">void CreateCommandPool();</text><ellipse cx="18" cy="1084.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1701" x="27" y="1089.1738">VKAPI_ATTR VkBool32 VKAPI_CALL DebugCallback(        VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,        VkDebugUtilsMessageTypeFlagsEXT messageType,        const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,        void *pUserData);</text></g><!--SRC=[dLPBRniv3BxxL-XaE5dlfRtLsm297uqHfyZ6Z-vX0KEUeSU2nvfPIPFK3RA_VQd7o9g7NMnpY4SY-OaYFv6KIXIH8lDNcWztbF5vaUUPK2DGbAMoyzOX-BVQpmknfH4CQKutB6MAWNouVoPHi1uOLQdYJvzU85AP-CERJJ9ne0eDRiZMVBOgFmcGmDLZ5eDHpKzhr7_lTAJrzSy22fZG0qkFKnwp24et2yRLnmzhHH91ynsBf5KQL8KEDfHjiYoj6TrJkQ9f0UGpsT9KGg1O0MZNOpnb7ApwL0wpGvw2WjuLUIC2L27ukTEwtNRu0NdN4OXIAYKPmGlUsbtwDxViVMCypbv9zzNyNWsSzEz_dTplk7MKSQb8QNM55uX1UrbL8zqi1q4nGv-THRdVj72tNksdg4SvAdq1LNxZvQsz3y5XNShqxMeGZZcQP0ZYLcqOJjG2uHn5yp82JMihQJ4s9DEsNroYp4ORH4NX4fBZzrcWKDw2WomwK1u_QKuXMh1i0ml43Qpc0zA0pTqcxWJPqgA7lk-EaaKqjV6yQXnvfhwOtBQBceVZmU9uJlk22oyPYybG05LmLsot87h4_PKScRCVG2J-wvyaLdKfQGAJb2QI5FepK7Y4GoQEJqA_3tMqEhbTOJLi897knlpswuTRd59iL_wj-ggb8szbYsCE67ZutlD2XLiJhC8Q_MUEUMZFAEVV7IGOLSQJ51Ri04ueJtN3n77CunQTEbOKhge0mom_kZJuq4WHtRdW-BrOgjDUBKtd41VPz819EW5lF88H47OmEVI1UsMnsWNh7R1afuADb1v13BE2gzgPXau6z1jJkodVPfvLbhRkIAU8Sj8rf-lFNs6HlK3NtU0CXuoqHg7LthPVGo7tQY2sUwwaL_km5TsGReGfP36wBtq45zZiUKAK-Ubxx0bUiX3keMpjGZFDkF1x9MI-7GoSq3J9uGwYFNOwVHpB-4o7tVbwqWpTj8v7Eoh8zOqk8y_mJy44nEFl2hX437aoDES_PNcHeWSZs1J94cyW7q5YmKqmmJv9FHtH2_BnNmlIZRM6NbKFc8DQviRQ6zPSi3Y-cLNTOz6-Mi9g8PfAzmeAfkWcrIolwcCtjfNFMRMK-JFrksHiEvubT3DTLil7kqpNpzmwrmekblV_us4GwbcMjCKpqAYqKK_OSYeIQ_jL6WQZJJ2zU64BTJHXz9WHik9a44mvfqd6IskNhRSudBzM3-klozbiVN_xTJGRXuuu2pVVU84THkf3IqDS6KMyD9n0gXD6nzMQDuo8Oj6xgu66At8zvfgljTSzQ3Sv_yRbkeOWVm6YnjacnEhXzccwlbqiddKhGly_Vd1xmzlPZ9X43ccQRcYqhymHOUQnKCxX1GIp5VsEAMbuK1NrBvWlJ4V7QXhOwRr-lScqLIldteWggislyt378vX7S9ql9GYzZ-H__my0]--></g></svg>